//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IMSDKMTAGCDAsyncReadPacket, IMSDKMTAGCDAsyncSocketPreBuffer, IMSDKMTAGCDAsyncWritePacket, NSData, NSMutableArray, NSString, NSURL;

@interface IMSDKMTAGCDAsyncSocket : NSObject
{
    unsigned int flags;	// 8 = 0x8
    unsigned short config;	// 12 = 0xc
    id <IMSDKMTAGCDAsyncSocketDelegate> delegate;	// 16 = 0x10
    struct dispatch_queue_s *delegateQueue;	// 24 = 0x18
    int socket4FD;	// 32 = 0x20
    int socket6FD;	// 36 = 0x24
    int socketUN;	// 40 = 0x28
    NSURL *socketUrl;	// 48 = 0x30
    int stateIndex;	// 56 = 0x38
    NSData *connectInterface4;	// 64 = 0x40
    NSData *connectInterface6;	// 72 = 0x48
    NSData *connectInterfaceUN;	// 80 = 0x50
    struct dispatch_queue_s *socketQueue;	// 88 = 0x58
    struct dispatch_source_s *accept4Source;	// 96 = 0x60
    struct dispatch_source_s *accept6Source;	// 104 = 0x68
    struct dispatch_source_s *acceptUNSource;	// 112 = 0x70
    struct dispatch_source_s *connectTimer;	// 120 = 0x78
    struct dispatch_source_s *readSource;	// 128 = 0x80
    struct dispatch_source_s *writeSource;	// 136 = 0x88
    struct dispatch_source_s *readTimer;	// 144 = 0x90
    struct dispatch_source_s *writeTimer;	// 152 = 0x98
    NSMutableArray *readQueue;	// 160 = 0xa0
    NSMutableArray *writeQueue;	// 168 = 0xa8
    IMSDKMTAGCDAsyncReadPacket *currentRead;	// 176 = 0xb0
    IMSDKMTAGCDAsyncWritePacket *currentWrite;	// 184 = 0xb8
    unsigned long long socketFDBytesAvailable;	// 192 = 0xc0
    IMSDKMTAGCDAsyncSocketPreBuffer *preBuffer;	// 200 = 0xc8
    CDStruct_4210025a streamContext;	// 208 = 0xd0
    struct __CFReadStream *readStream;	// 248 = 0xf8
    struct __CFWriteStream *writeStream;	// 256 = 0x100
    void *IsOnSocketQueueOrTargetQueueKey;	// 264 = 0x108
    id userData;	// 272 = 0x110
    double alternateAddressDelay;	// 280 = 0x118
}

+ (id)ZeroData;	// IMP=0x0000000100666bf0
+ (id)LFData;	// IMP=0x0000000100666bd0
+ (id)CRData;	// IMP=0x0000000100666bb0
+ (id)CRLFData;	// IMP=0x0000000100666b90
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 family:(char *)arg3 fromAddress:(id)arg4;	// IMP=0x00000001006669c4
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;	// IMP=0x00000001006669ac
+ (_Bool)isIPv6Address:(id)arg1;	// IMP=0x000000010066693c
+ (_Bool)isIPv4Address:(id)arg1;	// IMP=0x00000001006668cc
+ (unsigned short)portFromAddress:(id)arg1;	// IMP=0x0000000100666888
+ (id)hostFromAddress:(id)arg1;	// IMP=0x0000000100666810
+ (id)urlFromSockaddrUN:(const struct sockaddr_un *)arg1;	// IMP=0x00000001006667a4
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x0000000100666794
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x0000000100666784
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x0000000100666708
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x000000010066668c
+ (id)lookupHost:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x00000001006662b4
+ (void)unscheduleCFStreams:(id)arg1;	// IMP=0x0000000100664ee0
+ (void)scheduleCFStreams:(id)arg1;	// IMP=0x0000000100664d80
+ (void)cfstreamThread;	// IMP=0x0000000100664bc8
+ (void)stopCFStreamThreadIfNeeded;	// IMP=0x0000000100664a74
+ (void)startCFStreamThreadIfNeeded;	// IMP=0x0000000100664924
+ (void)ignore:(id)arg1;	// IMP=0x0000000100664920
+ (id)gaiError:(int)arg1;	// IMP=0x000000010065e400
- (void).cxx_destruct;	// IMP=0x0000000100666c10
- (_Bool)enableBackgroundingOnSocketWithCaveat;	// IMP=0x0000000100666270
- (_Bool)enableBackgroundingOnSocket;	// IMP=0x000000010066622c
- (_Bool)enableBackgroundingOnSocketWithCaveat:(_Bool)arg1;	// IMP=0x0000000100666170
- (struct __CFWriteStream *)writeStream;	// IMP=0x000000010066611c
- (struct __CFReadStream *)readStream;	// IMP=0x00000001006660c8
- (int)socket6FD;	// IMP=0x0000000100666084
- (int)socket4FD;	// IMP=0x0000000100666040
- (int)socketFD;	// IMP=0x0000000100665fe8
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100665f90
- (void)unmarkSocketQueueTargetQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x0000000100665f74
- (void)markSocketQueueTargetQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x0000000100665f54
@property _Bool autoDisconnectOnClosedReadStream;
- (_Bool)openStreams;	// IMP=0x0000000100665b18
- (void)removeStreamsFromRunLoop;	// IMP=0x0000000100665914
- (_Bool)addStreamsToRunLoop;	// IMP=0x000000010066570c
- (_Bool)registerForStreamCallbacksIncludingReadWrite:(_Bool)arg1;	// IMP=0x0000000100665238
- (_Bool)createReadAndWriteStream;	// IMP=0x0000000100665040
- (void)doWriteTimeoutWithExtension:(double)arg1;	// IMP=0x0000000100664838
- (void)doWriteTimeout;	// IMP=0x0000000100664584
- (void)setupWriteTimerWithTimeout:(double)arg1;	// IMP=0x00000001006643d4
- (void)endCurrentWrite;	// IMP=0x0000000100664390
- (void)completeCurrentWrite;	// IMP=0x0000000100664154
- (void)doWriteData;	// IMP=0x0000000100663d1c
- (void)maybeDequeueWrite;	// IMP=0x0000000100663b20
- (float)progressOfWriteReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x0000000100663888
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001006636c0
- (void)doReadTimeoutWithExtension:(double)arg1;	// IMP=0x00000001006635d8
- (void)doReadTimeout;	// IMP=0x0000000100663324
- (void)setupReadTimerWithTimeout:(double)arg1;	// IMP=0x0000000100663174
- (void)endCurrentRead;	// IMP=0x0000000100663130
- (void)completeCurrentRead;	// IMP=0x0000000100662d8c
- (void)doReadEOF;	// IMP=0x0000000100662b08
- (void)doReadData;	// IMP=0x0000000100661f58
- (void)maybeDequeueRead;	// IMP=0x0000000100661d5c
- (float)progressOfReadReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x0000000100661ac4
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 maxLength:(unsigned long long)arg5 tag:(long long)arg6;	// IMP=0x0000000100661888
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x0000000100661864
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001006617e8
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001006617c8
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001006615d4
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001006615b8
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 maxLength:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001006613cc
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x00000001006613b4
- (void)readDataWithTimeout:(double)arg1 tag:(long long)arg2;	// IMP=0x0000000100661394
- (void)resumeWriteSource;	// IMP=0x0000000100661348
- (void)suspendWriteSource;	// IMP=0x00000001006612fc
- (void)resumeReadSource;	// IMP=0x00000001006612b0
- (void)suspendReadSource;	// IMP=0x0000000100661264
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;	// IMP=0x0000000100660e6c
- (id)getInterfaceAddressFromUrl:(id)arg1;	// IMP=0x0000000100660d74
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;	// IMP=0x0000000100660838
@property(readonly) _Bool isIPv6;
@property(readonly) _Bool isIPv4;
@property(readonly) NSData *localAddress;
@property(readonly) NSData *connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;	// IMP=0x000000010065ff84
- (unsigned short)localPortFromSocket4:(int)arg1;	// IMP=0x000000010065feec
- (id)localHostFromSocket6:(int)arg1;	// IMP=0x000000010065fe78
- (id)localHostFromSocket4:(int)arg1;	// IMP=0x000000010065fdd8
- (id)connectedUrlFromSocketUN:(int)arg1;	// IMP=0x000000010065fd38
- (unsigned short)connectedPortFromSocket6:(int)arg1;	// IMP=0x000000010065fccc
- (unsigned short)connectedPortFromSocket4:(int)arg1;	// IMP=0x000000010065fc34
- (id)connectedHostFromSocket6:(int)arg1;	// IMP=0x000000010065fbc0
- (id)connectedHostFromSocket4:(int)arg1;	// IMP=0x000000010065fb20
- (unsigned short)localPort6;	// IMP=0x000000010065fae8
- (unsigned short)localPort4;	// IMP=0x000000010065fab0
- (id)localHost6;	// IMP=0x000000010065fa70
- (id)localHost4;	// IMP=0x000000010065fa30
- (unsigned short)connectedPort6;	// IMP=0x000000010065f9f8
- (unsigned short)connectedPort4;	// IMP=0x000000010065f9c0
- (id)connectedHost6;	// IMP=0x000000010065f980
- (id)connectedHost4;	// IMP=0x000000010065f940
@property(readonly) unsigned short localPort;
@property(readonly) NSString *localHost;
@property(readonly) NSURL *connectedUrl;
@property(readonly) unsigned short connectedPort;
@property(readonly) NSString *connectedHost;
@property(readonly) _Bool isConnected;
@property(readonly) _Bool isDisconnected;
- (id)otherError:(id)arg1;	// IMP=0x000000010065eb4c
- (id)connectionClosedError;	// IMP=0x000000010065ea60
- (id)writeTimeoutError;	// IMP=0x000000010065e974
- (id)readTimeoutError;	// IMP=0x000000010065e888
- (id)readMaxedOutError;	// IMP=0x000000010065e79c
- (id)connectTimeoutError;	// IMP=0x000000010065e6b0
- (id)errnoError;	// IMP=0x000000010065e5d8
- (id)errnoErrorWithReason:(id)arg1;	// IMP=0x000000010065e4cc
- (id)badParamError:(id)arg1;	// IMP=0x000000010065e380
- (id)badConfigError:(id)arg1;	// IMP=0x000000010065e300
- (void)maybeClose;	// IMP=0x000000010065e178
- (void)disconnectAfterReadingAndWriting;	// IMP=0x000000010065e09c
- (void)disconnectAfterWriting;	// IMP=0x000000010065dfc0
- (void)disconnectAfterReading;	// IMP=0x000000010065dee4
- (void)disconnect;	// IMP=0x000000010065dddc
- (void)closeWithError:(id)arg1;	// IMP=0x000000010065d878
- (void)doConnectTimeout;	// IMP=0x000000010065d81c
- (void)endConnectTimeout;	// IMP=0x000000010065d79c
- (void)startConnectTimeout:(double)arg1;	// IMP=0x000000010065d5ec
- (void)didNotConnect:(int)arg1 error:(id)arg2;	// IMP=0x000000010065d4d0
- (void)didConnect:(int)arg1;	// IMP=0x000000010065cb6c
- (_Bool)connectWithAddressUN:(id)arg1 error:(id *)arg2;	// IMP=0x000000010065c6b8
- (_Bool)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;	// IMP=0x000000010065c334
- (void)closeUnusedSocket:(int)arg1;	// IMP=0x000000010065c2f8
- (void)closeSocket:(int)arg1;	// IMP=0x000000010065c26c
- (void)connectSocket:(int)arg1 address:(id)arg2 stateIndex:(int)arg3;	// IMP=0x000000010065be74
- (int)createSocket:(int)arg1 connectInterface:(id)arg2 errPtr:(id *)arg3;	// IMP=0x000000010065bd80
- (_Bool)bindSocket:(int)arg1 toInterface:(id)arg2 error:(id *)arg3;	// IMP=0x000000010065bc64
- (void)lookup:(int)arg1 didFail:(id)arg2;	// IMP=0x000000010065bb38
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;	// IMP=0x000000010065b8a8
- (_Bool)connectToUrl:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x000000010065b4ac
- (_Bool)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x000000010065af88
- (_Bool)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x000000010065af70
- (_Bool)connectToAddress:(id)arg1 error:(id *)arg2;	// IMP=0x000000010065af54
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;	// IMP=0x000000010065a590
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x000000010065a578
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x000000010065a568
- (_Bool)preConnectWithUrl:(id)arg1 error:(id *)arg2;	// IMP=0x000000010065a2f4
- (_Bool)preConnectWithInterface:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100659fa0
- (_Bool)doAccept:(int)arg1;	// IMP=0x0000000100659abc
- (_Bool)acceptOnUrl:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100659130
- (_Bool)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x00000001006584e8
- (_Bool)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;	// IMP=0x00000001006584c8
@property(retain) id userData;
@property double alternateAddressDelay;
@property(getter=isIPv4PreferredOverIPv6) _Bool IPv4PreferredOverIPv6;
@property(getter=isIPv6Enabled) _Bool IPv6Enabled;
@property(getter=isIPv4Enabled) _Bool IPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x0000000100657848
- (void)setDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x0000000100657838
- (void)setDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2 synchronously:(_Bool)arg3;	// IMP=0x0000000100657684
- (void)getDelegate:(id *)arg1 delegateQueue:(struct dispatch_queue_s **)arg2;	// IMP=0x0000000100657428
- (void)synchronouslySetDelegateQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x0000000100657418
@property struct dispatch_queue_s *delegateQueue;
- (void)setDelegateQueue:(struct dispatch_queue_s *)arg1 synchronously:(_Bool)arg2;	// IMP=0x00000001006572e4
- (void)synchronouslySetDelegate:(id)arg1;	// IMP=0x000000010065718c
@property __weak id <IMSDKMTAGCDAsyncSocketDelegate> delegate;
- (void)setDelegate:(id)arg1 synchronously:(_Bool)arg2;	// IMP=0x0000000100657020
- (void)dealloc;	// IMP=0x0000000100656d18
- (id)initWithDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2 socketQueue:(struct dispatch_queue_s *)arg3;	// IMP=0x00000001006568cc
- (id)initWithDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x00000001006568bc
- (id)initWithSocketQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x00000001006568a0
- (id)init;	// IMP=0x0000000100656888

@end

