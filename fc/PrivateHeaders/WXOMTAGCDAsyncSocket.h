//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSMutableArray, NSString, NSURL, WXOMTAGCDAsyncReadPacket, WXOMTAGCDAsyncSocketPreBuffer, WXOMTAGCDAsyncWritePacket;

@interface WXOMTAGCDAsyncSocket : NSObject
{
    unsigned int flags;	// 8 = 0x8
    unsigned short config;	// 12 = 0xc
    id <WXOMTAGCDAsyncSocketDelegate> delegate;	// 16 = 0x10
    struct dispatch_queue_s *delegateQueue;	// 24 = 0x18
    int socket4FD;	// 32 = 0x20
    int socket6FD;	// 36 = 0x24
    int socketUN;	// 40 = 0x28
    NSURL *socketUrl;	// 48 = 0x30
    int stateIndex;	// 56 = 0x38
    NSData *connectInterface4;	// 64 = 0x40
    NSData *connectInterface6;	// 72 = 0x48
    NSData *connectInterfaceUN;	// 80 = 0x50
    struct dispatch_queue_s *socketQueue;	// 88 = 0x58
    struct dispatch_source_s *accept4Source;	// 96 = 0x60
    struct dispatch_source_s *accept6Source;	// 104 = 0x68
    struct dispatch_source_s *acceptUNSource;	// 112 = 0x70
    struct dispatch_source_s *connectTimer;	// 120 = 0x78
    struct dispatch_source_s *readSource;	// 128 = 0x80
    struct dispatch_source_s *writeSource;	// 136 = 0x88
    struct dispatch_source_s *readTimer;	// 144 = 0x90
    struct dispatch_source_s *writeTimer;	// 152 = 0x98
    NSMutableArray *readQueue;	// 160 = 0xa0
    NSMutableArray *writeQueue;	// 168 = 0xa8
    WXOMTAGCDAsyncReadPacket *currentRead;	// 176 = 0xb0
    WXOMTAGCDAsyncWritePacket *currentWrite;	// 184 = 0xb8
    unsigned long long socketFDBytesAvailable;	// 192 = 0xc0
    WXOMTAGCDAsyncSocketPreBuffer *preBuffer;	// 200 = 0xc8
    CDStruct_4210025a streamContext;	// 208 = 0xd0
    struct __CFReadStream *readStream;	// 248 = 0xf8
    struct __CFWriteStream *writeStream;	// 256 = 0x100
    void *IsOnSocketQueueOrTargetQueueKey;	// 264 = 0x108
    id userData;	// 272 = 0x110
    double alternateAddressDelay;	// 280 = 0x118
    _Bool _isSecure;	// 288 = 0x120
}

+ (id)ZeroData;	// IMP=0x000000010153abe8
+ (id)LFData;	// IMP=0x000000010153abc8
+ (id)CRData;	// IMP=0x000000010153aba8
+ (id)CRLFData;	// IMP=0x000000010153ab88
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 family:(char *)arg3 fromAddress:(id)arg4;	// IMP=0x000000010153a9c8
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;	// IMP=0x000000010153a9b0
+ (_Bool)isIPv6Address:(id)arg1;	// IMP=0x000000010153a940
+ (_Bool)isIPv4Address:(id)arg1;	// IMP=0x000000010153a8d0
+ (unsigned short)portFromAddress:(id)arg1;	// IMP=0x000000010153a88c
+ (id)hostFromAddress:(id)arg1;	// IMP=0x000000010153a814
+ (id)urlFromSockaddrUN:(const struct sockaddr_un *)arg1;	// IMP=0x000000010153a7a8
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x000000010153a798
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x000000010153a788
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x000000010153a70c
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x000000010153a690
+ (id)lookupHost:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x000000010153a2b4
+ (void)unscheduleCFStreams:(id)arg1;	// IMP=0x0000000101538d98
+ (void)scheduleCFStreams:(id)arg1;	// IMP=0x0000000101538c34
+ (void)cfstreamThread;	// IMP=0x0000000101538a7c
+ (void)stopCFStreamThreadIfNeeded;	// IMP=0x0000000101538924
+ (void)startCFStreamThreadIfNeeded;	// IMP=0x00000001015387d0
+ (void)ignore:(id)arg1;	// IMP=0x00000001015387cc
+ (id)gaiError:(int)arg1;	// IMP=0x0000000101532290
+ (id)socketFromConnectedSocketFD:(int)arg1 delegate:(id)arg2 delegateQueue:(struct dispatch_queue_s *)arg3 socketQueue:(struct dispatch_queue_s *)arg4 error:(id *)arg5;	// IMP=0x000000010152a84c
+ (id)socketFromConnectedSocketFD:(int)arg1 delegate:(id)arg2 delegateQueue:(struct dispatch_queue_s *)arg3 error:(id *)arg4;	// IMP=0x000000010152a834
+ (id)socketFromConnectedSocketFD:(int)arg1 socketQueue:(struct dispatch_queue_s *)arg2 error:(id *)arg3;	// IMP=0x000000010152a810
@property(readonly) _Bool isSecure; // @synthesize isSecure=_isSecure;
- (void).cxx_destruct;	// IMP=0x000000010153ac1c
- (_Bool)enableBackgroundingOnSocketWithCaveat;	// IMP=0x000000010153a268
- (_Bool)enableBackgroundingOnSocket;	// IMP=0x000000010153a21c
- (_Bool)enableBackgroundingOnSocketWithCaveat:(_Bool)arg1;	// IMP=0x000000010153a160
- (struct __CFWriteStream *)writeStream;	// IMP=0x000000010153a10c
- (struct __CFReadStream *)readStream;	// IMP=0x000000010153a0b8
- (int)socket6FD;	// IMP=0x000000010153a074
- (int)socket4FD;	// IMP=0x000000010153a030
- (int)socketFD;	// IMP=0x0000000101539fd8
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000101539f80
- (void)unmarkSocketQueueTargetQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x0000000101539f64
- (void)markSocketQueueTargetQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x0000000101539f44
@property _Bool autoDisconnectOnClosedReadStream;
- (_Bool)openStreams;	// IMP=0x0000000101539b00
- (void)removeStreamsFromRunLoop;	// IMP=0x000000010153986c
- (_Bool)addStreamsToRunLoop;	// IMP=0x00000001015395d8
- (_Bool)registerForStreamCallbacksIncludingReadWrite:(_Bool)arg1;	// IMP=0x00000001015390f8
- (_Bool)createReadAndWriteStream;	// IMP=0x0000000101538efc
- (void)doWriteTimeoutWithExtension:(double)arg1;	// IMP=0x00000001015386e4
- (void)doWriteTimeout;	// IMP=0x0000000101538428
- (void)setupWriteTimerWithTimeout:(double)arg1;	// IMP=0x0000000101538270
- (void)endCurrentWrite;	// IMP=0x000000010153822c
- (void)completeCurrentWrite;	// IMP=0x0000000101537fe8
- (void)doWriteData;	// IMP=0x0000000101537bb4
- (void)maybeDequeueWrite;	// IMP=0x00000001015379b4
- (float)progressOfWriteReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x0000000101537718
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x000000010153754c
- (void)doReadTimeoutWithExtension:(double)arg1;	// IMP=0x0000000101537464
- (void)doReadTimeout;	// IMP=0x00000001015371a8
- (void)setupReadTimerWithTimeout:(double)arg1;	// IMP=0x0000000101536ff0
- (void)endCurrentRead;	// IMP=0x0000000101536fac
- (void)completeCurrentRead;	// IMP=0x0000000101536c00
- (void)doReadEOF;	// IMP=0x0000000101536978
- (void)doReadData;	// IMP=0x0000000101535dbc
- (void)maybeDequeueRead;	// IMP=0x0000000101535bbc
- (float)progressOfReadReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x0000000101535920
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 maxLength:(unsigned long long)arg5 tag:(long long)arg6;	// IMP=0x00000001015356e0
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x00000001015356bc
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x0000000101535640
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x0000000101535620
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x0000000101535428
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x000000010153540c
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 maxLength:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x000000010153521c
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x0000000101535204
- (void)readDataWithTimeout:(double)arg1 tag:(long long)arg2;	// IMP=0x00000001015351e4
- (void)resumeWriteSource;	// IMP=0x0000000101535198
- (void)suspendWriteSource;	// IMP=0x000000010153514c
- (void)resumeReadSource;	// IMP=0x0000000101535100
- (void)suspendReadSource;	// IMP=0x00000001015350b4
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;	// IMP=0x0000000101534cb0
- (id)getInterfaceAddressFromUrl:(id)arg1;	// IMP=0x0000000101534bb8
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;	// IMP=0x0000000101534670
@property(readonly) _Bool isIPv6;
@property(readonly) _Bool isIPv4;
@property(readonly) NSData *localAddress;
@property(readonly) NSData *connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;	// IMP=0x0000000101533dcc
- (unsigned short)localPortFromSocket4:(int)arg1;	// IMP=0x0000000101533d34
- (id)localHostFromSocket6:(int)arg1;	// IMP=0x0000000101533cc0
- (id)localHostFromSocket4:(int)arg1;	// IMP=0x0000000101533c20
- (id)connectedUrlFromSocketUN:(int)arg1;	// IMP=0x0000000101533b80
- (unsigned short)connectedPortFromSocket6:(int)arg1;	// IMP=0x0000000101533b14
- (unsigned short)connectedPortFromSocket4:(int)arg1;	// IMP=0x0000000101533a7c
- (id)connectedHostFromSocket6:(int)arg1;	// IMP=0x0000000101533a08
- (id)connectedHostFromSocket4:(int)arg1;	// IMP=0x0000000101533968
- (unsigned short)localPort6;	// IMP=0x0000000101533940
- (unsigned short)localPort4;	// IMP=0x0000000101533918
- (id)localHost6;	// IMP=0x00000001015338d8
- (id)localHost4;	// IMP=0x0000000101533898
- (unsigned short)connectedPort6;	// IMP=0x0000000101533870
- (unsigned short)connectedPort4;	// IMP=0x0000000101533848
- (id)connectedHost6;	// IMP=0x0000000101533808
- (id)connectedHost4;	// IMP=0x00000001015337c8
@property(readonly) unsigned short localPort;
@property(readonly) NSString *localHost;
@property(readonly) NSURL *connectedUrl;
@property(readonly) unsigned short connectedPort;
@property(readonly) NSString *connectedHost;
@property(readonly) _Bool isConnected;
@property(readonly) _Bool isDisconnected;
- (id)otherError:(id)arg1;	// IMP=0x00000001015329dc
- (id)connectionClosedError;	// IMP=0x00000001015328f0
- (id)writeTimeoutError;	// IMP=0x0000000101532804
- (id)readTimeoutError;	// IMP=0x0000000101532718
- (id)readMaxedOutError;	// IMP=0x000000010153262c
- (id)connectTimeoutError;	// IMP=0x0000000101532540
- (id)errnoError;	// IMP=0x0000000101532468
- (id)errnoErrorWithReason:(id)arg1;	// IMP=0x000000010153235c
- (id)badParamError:(id)arg1;	// IMP=0x0000000101532210
- (id)badConfigError:(id)arg1;	// IMP=0x0000000101532190
- (void)maybeClose;	// IMP=0x0000000101532004
- (void)disconnectAfterReadingAndWriting;	// IMP=0x0000000101531f24
- (void)disconnectAfterWriting;	// IMP=0x0000000101531e44
- (void)disconnectAfterReading;	// IMP=0x0000000101531d64
- (void)disconnect;	// IMP=0x0000000101531c58
- (void)closeWithError:(id)arg1;	// IMP=0x00000001015316ec
- (void)doConnectTimeout;	// IMP=0x0000000101531690
- (void)endConnectTimeout;	// IMP=0x0000000101531610
- (void)startConnectTimeout:(double)arg1;	// IMP=0x0000000101531458
- (void)didNotConnect:(int)arg1 error:(id)arg2;	// IMP=0x0000000101531338
- (void)didConnect:(int)arg1;	// IMP=0x00000001015309bc
- (_Bool)connectWithAddressUN:(id)arg1 error:(id *)arg2;	// IMP=0x00000001015304f4
- (_Bool)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;	// IMP=0x0000000101530168
- (void)closeUnusedSocket:(int)arg1;	// IMP=0x000000010153012c
- (void)closeSocket:(int)arg1;	// IMP=0x00000001015300a0
- (void)connectSocket:(int)arg1 address:(id)arg2 stateIndex:(int)arg3;	// IMP=0x000000010152fca8
- (int)createSocket:(int)arg1 connectInterface:(id)arg2 errPtr:(id *)arg3;	// IMP=0x000000010152fbb4
- (_Bool)bindSocket:(int)arg1 toInterface:(id)arg2 error:(id *)arg3;	// IMP=0x000000010152fa98
- (void)lookup:(int)arg1 didFail:(id)arg2;	// IMP=0x000000010152f968
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;	// IMP=0x000000010152f6d4
- (_Bool)connectToUrl:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x000000010152f314
- (_Bool)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x000000010152ee04
- (_Bool)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x000000010152edec
- (_Bool)connectToAddress:(id)arg1 error:(id *)arg2;	// IMP=0x000000010152edd0
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;	// IMP=0x000000010152e414
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x000000010152e3fc
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x000000010152e3ec
- (_Bool)preConnectWithUrl:(id)arg1 error:(id *)arg2;	// IMP=0x000000010152e174
- (_Bool)preConnectWithInterface:(id)arg1 error:(id *)arg2;	// IMP=0x000000010152de1c
- (_Bool)doAccept:(int)arg1;	// IMP=0x000000010152d920
- (_Bool)acceptOnUrl:(id)arg1 error:(id *)arg2;	// IMP=0x000000010152cf94
- (_Bool)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x000000010152c33c
- (_Bool)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;	// IMP=0x000000010152c31c
@property(retain) id userData;
@property double alternateAddressDelay;
@property(getter=isIPv4PreferredOverIPv6) _Bool IPv4PreferredOverIPv6;
@property(getter=isIPv6Enabled) _Bool IPv6Enabled;
@property(getter=isIPv4Enabled) _Bool IPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x000000010152b688
- (void)setDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x000000010152b678
- (void)setDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2 synchronously:(_Bool)arg3;	// IMP=0x000000010152b4c0
- (void)getDelegate:(id *)arg1 delegateQueue:(struct dispatch_queue_s **)arg2;	// IMP=0x000000010152b270
- (void)synchronouslySetDelegateQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x000000010152b260
@property struct dispatch_queue_s *delegateQueue;
- (void)setDelegateQueue:(struct dispatch_queue_s *)arg1 synchronously:(_Bool)arg2;	// IMP=0x000000010152b128
- (void)synchronouslySetDelegate:(id)arg1;	// IMP=0x000000010152afcc
@property __weak id <WXOMTAGCDAsyncSocketDelegate> delegate;
- (void)setDelegate:(id)arg1 synchronously:(_Bool)arg2;	// IMP=0x000000010152ae5c
- (void)dealloc;	// IMP=0x000000010152a6c8
- (id)initWithDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2 socketQueue:(struct dispatch_queue_s *)arg3;	// IMP=0x000000010152a270
- (id)initWithDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;	// IMP=0x000000010152a260
- (id)initWithSocketQueue:(struct dispatch_queue_s *)arg1;	// IMP=0x000000010152a244
- (id)init;	// IMP=0x000000010152a22c

@end

