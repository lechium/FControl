//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCopying.h"
#import "NSSecureCoding.h"
#import "NSURLSessionDataDelegate.h"
#import "NSURLSessionDelegate.h"
#import "NSURLSessionDownloadDelegate.h"
#import "NSURLSessionTaskDelegate.h"

@class IMSDKAFNetworkReachabilityManager, IMSDKAFSecurityPolicy, NSArray, NSLock, NSMutableDictionary, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString, NSURLSession, NSURLSessionConfiguration;

@interface IMSDKAFURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSSecureCoding, NSCopying>
{
    _Bool _attemptsToRecreateUploadTasksForBackgroundSessions;	// 8 = 0x8
    NSURLSession *_session;	// 16 = 0x10
    NSOperationQueue *_operationQueue;	// 24 = 0x18
    id <IMSDKAFURLResponseSerialization> _responseSerializer;	// 32 = 0x20
    IMSDKAFSecurityPolicy *_securityPolicy;	// 40 = 0x28
    IMSDKAFNetworkReachabilityManager *_reachabilityManager;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_completionQueue;	// 56 = 0x38
    NSObject<OS_dispatch_group> *_completionGroup;	// 64 = 0x40
    NSURLSessionConfiguration *_sessionConfiguration;	// 72 = 0x48
    NSMutableDictionary *_mutableTaskDelegatesKeyedByTaskIdentifier;	// 80 = 0x50
    NSLock *_lock;	// 88 = 0x58
    CDUnknownBlockType _sessionDidBecomeInvalid;	// 96 = 0x60
    CDUnknownBlockType _sessionDidReceiveAuthenticationChallenge;	// 104 = 0x68
    CDUnknownBlockType _didFinishEventsForBackgroundURLSession;	// 112 = 0x70
    CDUnknownBlockType _taskWillPerformHTTPRedirection;	// 120 = 0x78
    CDUnknownBlockType _taskDidReceiveAuthenticationChallenge;	// 128 = 0x80
    CDUnknownBlockType _taskNeedNewBodyStream;	// 136 = 0x88
    CDUnknownBlockType _taskDidSendBodyData;	// 144 = 0x90
    CDUnknownBlockType _taskDidComplete;	// 152 = 0x98
    CDUnknownBlockType _dataTaskDidReceiveResponse;	// 160 = 0xa0
    CDUnknownBlockType _dataTaskDidBecomeDownloadTask;	// 168 = 0xa8
    CDUnknownBlockType _dataTaskDidReceiveData;	// 176 = 0xb0
    CDUnknownBlockType _dataTaskWillCacheResponse;	// 184 = 0xb8
    CDUnknownBlockType _downloadTaskDidFinishDownloading;	// 192 = 0xc0
    CDUnknownBlockType _downloadTaskDidWriteData;	// 200 = 0xc8
    CDUnknownBlockType _downloadTaskDidResume;	// 208 = 0xd0
}

+ (_Bool)supportsSecureCoding;	// IMP=0x0000000100612fb0
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidResume; // @synthesize downloadTaskDidResume=_downloadTaskDidResume;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidWriteData; // @synthesize downloadTaskDidWriteData=_downloadTaskDidWriteData;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) CDUnknownBlockType dataTaskWillCacheResponse; // @synthesize dataTaskWillCacheResponse=_dataTaskWillCacheResponse;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveData; // @synthesize dataTaskDidReceiveData=_dataTaskDidReceiveData;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidBecomeDownloadTask; // @synthesize dataTaskDidBecomeDownloadTask=_dataTaskDidBecomeDownloadTask;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveResponse; // @synthesize dataTaskDidReceiveResponse=_dataTaskDidReceiveResponse;
@property(copy, nonatomic) CDUnknownBlockType taskDidComplete; // @synthesize taskDidComplete=_taskDidComplete;
@property(copy, nonatomic) CDUnknownBlockType taskDidSendBodyData; // @synthesize taskDidSendBodyData=_taskDidSendBodyData;
@property(copy, nonatomic) CDUnknownBlockType taskNeedNewBodyStream; // @synthesize taskNeedNewBodyStream=_taskNeedNewBodyStream;
@property(copy, nonatomic) CDUnknownBlockType taskDidReceiveAuthenticationChallenge; // @synthesize taskDidReceiveAuthenticationChallenge=_taskDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType taskWillPerformHTTPRedirection; // @synthesize taskWillPerformHTTPRedirection=_taskWillPerformHTTPRedirection;
@property(copy, nonatomic) CDUnknownBlockType didFinishEventsForBackgroundURLSession; // @synthesize didFinishEventsForBackgroundURLSession=_didFinishEventsForBackgroundURLSession;
@property(copy, nonatomic) CDUnknownBlockType sessionDidReceiveAuthenticationChallenge; // @synthesize sessionDidReceiveAuthenticationChallenge=_sessionDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType sessionDidBecomeInvalid; // @synthesize sessionDidBecomeInvalid=_sessionDidBecomeInvalid;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableDictionary *mutableTaskDelegatesKeyedByTaskIdentifier; // @synthesize mutableTaskDelegatesKeyedByTaskIdentifier=_mutableTaskDelegatesKeyedByTaskIdentifier;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic) _Bool attemptsToRecreateUploadTasksForBackgroundSessions; // @synthesize attemptsToRecreateUploadTasksForBackgroundSessions=_attemptsToRecreateUploadTasksForBackgroundSessions;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) IMSDKAFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) IMSDKAFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) id <IMSDKAFURLResponseSerialization> responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;	// IMP=0x00000001006134e4
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000100613124
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000100613088
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000100612fb8
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;	// IMP=0x0000000100612ea8
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;	// IMP=0x0000000100612d8c
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;	// IMP=0x0000000100612b68
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;	// IMP=0x0000000100612a04
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000001006128d4
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x00000001006127c4
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;	// IMP=0x000000010061269c
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100612590
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x0000000100612464
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;	// IMP=0x00000001006122d0
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;	// IMP=0x00000001006120bc
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100611d88
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100611c3c
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100611918
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;	// IMP=0x000000010061181c
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x000000010061173c
@property(readonly, copy) NSString *description;
- (void)setDownloadTaskDidResumeBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611658
- (void)setDownloadTaskDidWriteDataBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010061164c
- (void)setDownloadTaskDidFinishDownloadingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611640
- (void)setDataTaskWillCacheResponseBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611634
- (void)setDataTaskDidReceiveDataBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611628
- (void)setDataTaskDidBecomeDownloadTaskBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010061161c
- (void)setDataTaskDidReceiveResponseBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611610
- (void)setTaskDidCompleteBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100611604
- (void)setTaskDidSendBodyDataBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115f8
- (void)setTaskDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115ec
- (void)setTaskWillPerformHTTPRedirectionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115e0
- (void)setTaskNeedNewBodyStreamBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115d4
- (void)setDidFinishEventsForBackgroundURLSessionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115c8
- (void)setSessionDidReceiveAuthenticationChallengeBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115bc
- (void)setSessionDidBecomeInvalidBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001006115b0
- (id)downloadProgressForTask:(id)arg1;	// IMP=0x000000010061155c
- (id)uploadProgressForTask:(id)arg1;	// IMP=0x0000000100611508
- (id)downloadTaskWithResumeData:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100611294
- (id)downloadTaskWithRequest:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100611020
- (id)uploadTaskWithStreamedRequest:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100610dd0
- (id)uploadTaskWithRequest:(id)arg1 fromData:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100610b38
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 progress:(id *)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100610790
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100610548
- (void)invalidateSessionCancelingTasks:(_Bool)arg1;	// IMP=0x000000010061045c
@property(readonly, nonatomic) NSArray *downloadTasks;
@property(readonly, nonatomic) NSArray *uploadTasks;
@property(readonly, nonatomic) NSArray *dataTasks;
@property(readonly, nonatomic) NSArray *tasks;
- (id)tasksForKeyPath:(id)arg1;	// IMP=0x000000010060fea8
- (void)removeAllDelegates;	// IMP=0x000000010060fe00
- (void)removeDelegateForTask:(id)arg1;	// IMP=0x000000010060fce8
- (void)addDelegateForDownloadTask:(id)arg1 progress:(id *)arg2 destination:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010060fa64
- (void)addDelegateForUploadTask:(id)arg1 progress:(id *)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010060f6dc
- (void)addDelegateForDataTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010060f5dc
- (void)setDelegate:(id)arg1 forTask:(id)arg2;	// IMP=0x000000010060f4a0
- (id)delegateForTask:(id)arg1;	// IMP=0x000000010060f374
- (void)taskDidSuspend:(id)arg1;	// IMP=0x000000010060f1ec
- (void)taskDidResume:(id)arg1;	// IMP=0x000000010060f064
@property(readonly, copy, nonatomic) NSString *taskDescriptionForSessionTasks;
- (void)dealloc;	// IMP=0x000000010060efac
- (id)initWithSessionConfiguration:(id)arg1;	// IMP=0x000000010060e86c
- (id)init;	// IMP=0x000000010060e85c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

