//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSStreamDelegate.h"

@class HsSRDelegateController, HsSRIOConsumerPool, HsSRProxyConnect, HsSRSecurityPolicy, HsSRWebSocketDeflater, HsSRWebSocketInflater, NSArray, NSInputStream, NSMutableArray, NSMutableData, NSMutableSet, NSObject<OS_dispatch_data>, NSObject<OS_dispatch_queue>, NSOperationQueue, NSOutputStream, NSString, NSURL, NSURLRequest;

@interface HsSRWebSocket : NSObject <NSStreamDelegate>
{
    struct _opaque_pthread_mutex_t *_kvoLock;	// 8 = 0x8
    int _propertyLock;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_workQueue;	// 24 = 0x18
    NSMutableArray *_consumers;	// 32 = 0x20
    NSInputStream *_inputStream;	// 40 = 0x28
    NSOutputStream *_outputStream;	// 48 = 0x30
    NSObject<OS_dispatch_data> *_readBuffer;	// 56 = 0x38
    unsigned long long _readBufferOffset;	// 64 = 0x40
    NSObject<OS_dispatch_data> *_outputBuffer;	// 72 = 0x48
    unsigned long long _outputBufferOffset;	// 80 = 0x50
    unsigned char _currentFrameOpcode;	// 88 = 0x58
    unsigned long long _currentFrameCount;	// 96 = 0x60
    unsigned long long _readOpCount;	// 104 = 0x68
    unsigned int _currentStringScanPosition;	// 112 = 0x70
    NSMutableData *_currentFrameData;	// 120 = 0x78
    NSString *_closeReason;	// 128 = 0x80
    NSString *_secKey;	// 136 = 0x88
    long long _pmdClientWindowBits;	// 144 = 0x90
    _Bool _pmdClientNoContextTakeover;	// 152 = 0x98
    long long _pmdServerWindowBits;	// 160 = 0xa0
    _Bool _pmdServerNoContextTakeover;	// 168 = 0xa8
    _Bool _deflate;	// 169 = 0xa9
    HsSRWebSocketInflater *_inflater;	// 176 = 0xb0
    HsSRWebSocketDeflater *_deflater;	// 184 = 0xb8
    HsSRSecurityPolicy *_securityPolicy;	// 192 = 0xc0
    _Bool _requestRequiresSSL;	// 200 = 0xc8
    _Bool _streamSecurityValidated;	// 201 = 0xc9
    unsigned char _currentReadMaskKey[4];	// 202 = 0xca
    unsigned long long _currentReadMaskOffset;	// 208 = 0xd0
    _Bool _closeWhenFinishedWriting;	// 216 = 0xd8
    _Bool _failed;	// 217 = 0xd9
    NSURLRequest *_urlRequest;	// 224 = 0xe0
    _Bool _sentClose;	// 232 = 0xe8
    _Bool _didFail;	// 233 = 0xe9
    _Bool _cleanupScheduled;	// 234 = 0xea
    int _closeCode;	// 236 = 0xec
    _Bool _isPumping;	// 240 = 0xf0
    NSMutableSet *_scheduledRunloops;	// 248 = 0xf8
    HsSRWebSocket *_selfRetain;	// 256 = 0x100
    NSArray *_requestedProtocols;	// 264 = 0x108
    NSArray *_requestedExtensions;	// 272 = 0x110
    HsSRIOConsumerPool *_consumerPool;	// 280 = 0x118
    HsSRProxyConnect *_proxyConnect;	// 288 = 0x120
    _Bool _allowsUntrustedSSLCertificates;	// 296 = 0x128
    long long _readyState;	// 304 = 0x130
    NSURL *_url;	// 312 = 0x138
    struct __CFHTTPMessage *_receivedHTTPHeaders;	// 320 = 0x140
    NSArray *_requestCookies;	// 328 = 0x148
    NSString *_protocol;	// 336 = 0x150
    HsSRDelegateController *_delegateController;	// 344 = 0x158
}

+ (_Bool)automaticallyNotifiesObserversOfReadyState;	// IMP=0x0000000101455698
@property(readonly, nonatomic) HsSRDelegateController *delegateController; // @synthesize delegateController=_delegateController;
@property(nonatomic) _Bool allowsUntrustedSSLCertificates; // @synthesize allowsUntrustedSSLCertificates=_allowsUntrustedSSLCertificates;
@property(readonly, copy, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property(copy, nonatomic) NSArray *requestCookies; // @synthesize requestCookies=_requestCookies;
@property(readonly, nonatomic) struct __CFHTTPMessage *receivedHTTPHeaders; // @synthesize receivedHTTPHeaders=_receivedHTTPHeaders;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;	// IMP=0x000000010145bb58
@property(retain, nonatomic) NSOperationQueue *delegateOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateDispatchQueue;
@property(nonatomic) __weak id <HsSRWebSocketDelegate> delegate;
- (void)safeHandleEvent:(unsigned long long)arg1 stream:(id)arg2;	// IMP=0x000000010145b290
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;	// IMP=0x000000010145aee4
- (void)_sendFrameWithOpcode:(long long)arg1 data:(id)arg2;	// IMP=0x000000010145aa94
- (void)_pumpScanner;	// IMP=0x000000010145aa30
- (_Bool)_innerPumpScanner;	// IMP=0x0000000101459e9c
- (void)_readUntilBytes:(const void *)arg1 length:(unsigned long long)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x0000000101459cbc
- (void)_readUntilHeaderCompleteWithCallback:(CDUnknownBlockType)arg1;	// IMP=0x0000000101459c9c
- (void)_cleanupSelfReference:(id)arg1;	// IMP=0x0000000101459b58
- (void)_scheduleCleanup;	// IMP=0x0000000101459a6c
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2 dataLength:(unsigned long long)arg3;	// IMP=0x000000010145998c
- (void)_addConsumerWithDataLength:(unsigned long long)arg1 callback:(CDUnknownBlockType)arg2 readToCurrentFrame:(_Bool)arg3 unmaskBytes:(_Bool)arg4 inflatedBytes:(_Bool)arg5;	// IMP=0x0000000101459890
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000101459814
- (void)_pumpWriting;	// IMP=0x00000001014591b8
- (void)_readFrameNew;	// IMP=0x00000001014590a4
- (void)_readFrameContinue;	// IMP=0x0000000101458b80
- (void)_handleFrameHeader:(CDStruct_8455587e)arg1 curData:(id)arg2;	// IMP=0x0000000101458908
- (void)_handleFrameWithData:(id)arg1 HsOpcode:(long long)arg2;	// IMP=0x00000001014583ac
- (void)closeConnection;	// IMP=0x000000010145835c
- (void)handleCloseWithData:(id)arg1;	// IMP=0x0000000101458088
- (void)handlePong:(id)arg1;	// IMP=0x0000000101457f4c
- (void)_handlePingWithData:(id)arg1;	// IMP=0x0000000101457d38
- (_Bool)sendPing:(id)arg1 error:(id *)arg2;	// IMP=0x0000000101457b5c
- (_Bool)sendDataNoCopy:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014579f4
- (_Bool)sendData:(id)arg1 error:(id *)arg2;	// IMP=0x0000000101457990
- (_Bool)sendString:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014577d4
- (void)send:(id)arg1;	// IMP=0x00000001014576ec
- (void)_writeData:(id)arg1;	// IMP=0x0000000101457528
- (void)_failWithError:(id)arg1;	// IMP=0x00000001014572a0
- (void)_closeWithProtocolError:(id)arg1;	// IMP=0x00000001014570f0
- (void)closeWithCode:(long long)arg1 reason:(id)arg2;	// IMP=0x0000000101456d70
- (void)close;	// IMP=0x0000000101456d5c
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;	// IMP=0x0000000101456c38
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;	// IMP=0x0000000101456b14
- (void)_updateSecureStreamOptions;	// IMP=0x0000000101456a24
- (void)didConnect;	// IMP=0x00000001014568dc
- (void)_readHTTPHeader;	// IMP=0x0000000101456754
- (_Bool)pmdConfigureWithExtensionsHeaderComponents:(id)arg1;	// IMP=0x00000001014562ec
- (id)SRHTTPHeaderFieldValues:(id)arg1;	// IMP=0x0000000101455ffc
- (void)_HTTPHeadersDidFinish;	// IMP=0x0000000101455cbc
- (_Bool)_checkHandshake:(struct __CFHTTPMessage *)arg1;	// IMP=0x0000000101455be8
- (void)_connectionDoneWithError:(id)arg1 readStream:(id)arg2 writeStream:(id)arg3;	// IMP=0x00000001014559a0
- (void)open;	// IMP=0x00000001014556a0
@property long long readyState; // @synthesize readyState=_readyState;
- (void)dealloc;	// IMP=0x000000010145549c
- (void)assertOnWorkQueue;	// IMP=0x0000000101455448
- (id)initWithURL:(id)arg1 protocols:(id)arg2 extensions:(id)arg3 allowsUntrustedSSLCertificates:(_Bool)arg4;	// IMP=0x0000000101455370
- (id)initWithURL:(id)arg1 securityPolicy:(id)arg2;	// IMP=0x00000001014552bc
- (id)initWithURL:(id)arg1 protocols:(id)arg2 extensions:(id)arg3;	// IMP=0x0000000101455240
- (id)initWithURL:(id)arg1 protocols:(id)arg2;	// IMP=0x00000001014551dc
- (id)initWithURL:(id)arg1;	// IMP=0x00000001014551cc
- (id)initWithURLRequest:(id)arg1;	// IMP=0x00000001014551bc
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2;	// IMP=0x0000000101455158
- (id)initWithURLRequest:(id)arg1 securityPolicy:(id)arg2;	// IMP=0x00000001014550f4
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2 extensions:(id)arg3 allowsUntrustedSSLCertificates:(_Bool)arg4;	// IMP=0x0000000101454fd4
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2 extensions:(id)arg3 securityPolicy:(id)arg4;	// IMP=0x0000000101454c44

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

