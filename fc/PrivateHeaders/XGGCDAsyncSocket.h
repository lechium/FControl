//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, NSURL, XGGCDAsyncReadPacket, XGGCDAsyncSocketPreBuffer, XGGCDAsyncWritePacket;

@interface XGGCDAsyncSocket : NSObject
{
    unsigned int flags;	// 8 = 0x8
    unsigned short config;	// 12 = 0xc
    id <XGGCDAsyncSocketDelegate> delegate;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *delegateQueue;	// 24 = 0x18
    int socket4FD;	// 32 = 0x20
    int socket6FD;	// 36 = 0x24
    int socketUN;	// 40 = 0x28
    NSURL *socketUrl;	// 48 = 0x30
    int stateIndex;	// 56 = 0x38
    NSData *connectInterface4;	// 64 = 0x40
    NSData *connectInterface6;	// 72 = 0x48
    NSData *connectInterfaceUN;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *socketQueue;	// 88 = 0x58
    NSObject<OS_dispatch_source> *accept4Source;	// 96 = 0x60
    NSObject<OS_dispatch_source> *accept6Source;	// 104 = 0x68
    NSObject<OS_dispatch_source> *acceptUNSource;	// 112 = 0x70
    NSObject<OS_dispatch_source> *connectTimer;	// 120 = 0x78
    NSObject<OS_dispatch_source> *readSource;	// 128 = 0x80
    NSObject<OS_dispatch_source> *writeSource;	// 136 = 0x88
    NSObject<OS_dispatch_source> *readTimer;	// 144 = 0x90
    NSObject<OS_dispatch_source> *writeTimer;	// 152 = 0x98
    NSMutableArray *readQueue;	// 160 = 0xa0
    NSMutableArray *writeQueue;	// 168 = 0xa8
    XGGCDAsyncReadPacket *currentRead;	// 176 = 0xb0
    XGGCDAsyncWritePacket *currentWrite;	// 184 = 0xb8
    unsigned long long socketFDBytesAvailable;	// 192 = 0xc0
    XGGCDAsyncSocketPreBuffer *preBuffer;	// 200 = 0xc8
    CDStruct_4210025a streamContext;	// 208 = 0xd0
    struct __CFReadStream *readStream;	// 248 = 0xf8
    struct __CFWriteStream *writeStream;	// 256 = 0x100
    void *IsOnSocketQueueOrTargetQueueKey;	// 264 = 0x108
    id userData;	// 272 = 0x110
    double alternateAddressDelay;	// 280 = 0x118
}

+ (id)ZeroData;	// IMP=0x00000001014ec1e0
+ (id)LFData;	// IMP=0x00000001014ec1c0
+ (id)CRData;	// IMP=0x00000001014ec1a0
+ (id)CRLFData;	// IMP=0x00000001014ec180
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 family:(char *)arg3 fromAddress:(id)arg4;	// IMP=0x00000001014ebfc0
+ (_Bool)getHost:(id *)arg1 port:(unsigned short *)arg2 fromAddress:(id)arg3;	// IMP=0x00000001014ebfa8
+ (_Bool)isIPv6Address:(id)arg1;	// IMP=0x00000001014ebf38
+ (_Bool)isIPv4Address:(id)arg1;	// IMP=0x00000001014ebec8
+ (unsigned short)portFromAddress:(id)arg1;	// IMP=0x00000001014ebe84
+ (id)hostFromAddress:(id)arg1;	// IMP=0x00000001014ebe0c
+ (id)urlFromSockaddrUN:(const struct sockaddr_un *)arg1;	// IMP=0x00000001014ebda0
+ (unsigned short)portFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x00000001014ebd90
+ (unsigned short)portFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x00000001014ebd80
+ (id)hostFromSockaddr6:(const struct sockaddr_in6 *)arg1;	// IMP=0x00000001014ebd04
+ (id)hostFromSockaddr4:(const struct sockaddr_in *)arg1;	// IMP=0x00000001014ebc88
+ (id)lookupHost:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x00000001014eb8c4
+ (void)unscheduleCFStreams:(id)arg1;	// IMP=0x00000001014eac5c
+ (void)scheduleCFStreams:(id)arg1;	// IMP=0x00000001014eabe4
+ (void)cfstreamThread;	// IMP=0x00000001014eaa2c
+ (void)stopCFStreamThreadIfNeeded;	// IMP=0x00000001014ea8d4
+ (void)startCFStreamThreadIfNeeded;	// IMP=0x00000001014ea778
+ (void)ignore:(id)arg1;	// IMP=0x00000001014ea774
+ (id)gaiError:(int)arg1;	// IMP=0x00000001014e49ec
- (void).cxx_destruct;	// IMP=0x00000001014ec200
- (_Bool)enableBackgroundingOnSocketWithCaveat;	// IMP=0x00000001014eb878
- (_Bool)enableBackgroundingOnSocket;	// IMP=0x00000001014eb82c
- (_Bool)enableBackgroundingOnSocketWithCaveat:(_Bool)arg1;	// IMP=0x00000001014eb770
- (struct __CFWriteStream *)writeStream;	// IMP=0x00000001014eb71c
- (struct __CFReadStream *)readStream;	// IMP=0x00000001014eb6c8
- (int)socket6FD;	// IMP=0x00000001014eb684
- (int)socket4FD;	// IMP=0x00000001014eb640
- (int)socketFD;	// IMP=0x00000001014eb5e8
- (void)performBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001014eb590
- (void)unmarkSocketQueueTargetQueue:(id)arg1;	// IMP=0x00000001014eb574
- (void)markSocketQueueTargetQueue:(id)arg1;	// IMP=0x00000001014eb554
@property _Bool autoDisconnectOnClosedReadStream;
- (_Bool)openStreams;	// IMP=0x00000001014eb2a8
- (void)removeStreamsFromRunLoop;	// IMP=0x00000001014eb214
- (_Bool)addStreamsToRunLoop;	// IMP=0x00000001014eb17c
- (_Bool)registerForStreamCallbacksIncludingReadWrite:(_Bool)arg1;	// IMP=0x00000001014eae10
- (_Bool)createReadAndWriteStream;	// IMP=0x00000001014eacd4
- (void)doWriteTimeoutWithExtension:(double)arg1;	// IMP=0x00000001014ea68c
- (void)doWriteTimeout;	// IMP=0x00000001014ea400
- (void)setupWriteTimerWithTimeout:(double)arg1;	// IMP=0x00000001014ea280
- (void)endCurrentWrite;	// IMP=0x00000001014ea234
- (void)completeCurrentWrite;	// IMP=0x00000001014ea0b4
- (void)doWriteData;	// IMP=0x00000001014e9ca8
- (void)maybeDequeueWrite;	// IMP=0x00000001014e9b60
- (float)progressOfWriteReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x00000001014e98f0
- (void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001014e973c
- (void)doReadTimeoutWithExtension:(double)arg1;	// IMP=0x00000001014e9654
- (void)doReadTimeout;	// IMP=0x00000001014e93c8
- (void)setupReadTimerWithTimeout:(double)arg1;	// IMP=0x00000001014e9248
- (void)endCurrentRead;	// IMP=0x00000001014e91fc
- (void)completeCurrentRead;	// IMP=0x00000001014e8f14
- (void)doReadEOF;	// IMP=0x00000001014e8ca0
- (void)doReadData;	// IMP=0x00000001014e8294
- (void)maybeDequeueRead;	// IMP=0x00000001014e814c
- (float)progressOfReadReturningTag:(long long *)arg1 bytesDone:(unsigned long long *)arg2 total:(unsigned long long *)arg3;	// IMP=0x00000001014e7ee4
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 maxLength:(unsigned long long)arg5 tag:(long long)arg6;	// IMP=0x00000001014e7cbc
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 maxLength:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x00000001014e7c98
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001014e7c1c
- (void)readDataToData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001014e7bfc
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 buffer:(id)arg3 bufferOffset:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001014e7a1c
- (void)readDataToLength:(unsigned long long)arg1 withTimeout:(double)arg2 tag:(long long)arg3;	// IMP=0x00000001014e7a00
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 maxLength:(unsigned long long)arg4 tag:(long long)arg5;	// IMP=0x00000001014e7828
- (void)readDataWithTimeout:(double)arg1 buffer:(id)arg2 bufferOffset:(unsigned long long)arg3 tag:(long long)arg4;	// IMP=0x00000001014e7810
- (void)readDataWithTimeout:(double)arg1 tag:(long long)arg2;	// IMP=0x00000001014e77f0
- (void)resumeWriteSource;	// IMP=0x00000001014e77a4
- (void)suspendWriteSource;	// IMP=0x00000001014e7758
- (void)resumeReadSource;	// IMP=0x00000001014e770c
- (void)suspendReadSource;	// IMP=0x00000001014e76c0
- (void)setupReadAndWriteSourcesForNewlyConnectedSocket:(int)arg1;	// IMP=0x00000001014e7300
- (id)getInterfaceAddressFromUrl:(id)arg1;	// IMP=0x00000001014e7204
- (void)getInterfaceAddress4:(id *)arg1 address6:(id *)arg2 fromDescription:(id)arg3 port:(unsigned short)arg4;	// IMP=0x00000001014e6cdc
@property(readonly) _Bool isIPv6;
@property(readonly) _Bool isIPv4;
@property(readonly) NSData *localAddress;
@property(readonly) NSData *connectedAddress;
- (unsigned short)localPortFromSocket6:(int)arg1;	// IMP=0x00000001014e6478
- (unsigned short)localPortFromSocket4:(int)arg1;	// IMP=0x00000001014e63e0
- (id)localHostFromSocket6:(int)arg1;	// IMP=0x00000001014e636c
- (id)localHostFromSocket4:(int)arg1;	// IMP=0x00000001014e62cc
- (id)connectedUrlFromSocketUN:(int)arg1;	// IMP=0x00000001014e622c
- (unsigned short)connectedPortFromSocket6:(int)arg1;	// IMP=0x00000001014e61c0
- (unsigned short)connectedPortFromSocket4:(int)arg1;	// IMP=0x00000001014e6128
- (id)connectedHostFromSocket6:(int)arg1;	// IMP=0x00000001014e60b4
- (id)connectedHostFromSocket4:(int)arg1;	// IMP=0x00000001014e6014
- (unsigned short)localPort6;	// IMP=0x00000001014e5fec
- (unsigned short)localPort4;	// IMP=0x00000001014e5fc4
- (id)localHost6;	// IMP=0x00000001014e5f84
- (id)localHost4;	// IMP=0x00000001014e5f44
- (unsigned short)connectedPort6;	// IMP=0x00000001014e5f1c
- (unsigned short)connectedPort4;	// IMP=0x00000001014e5ef4
- (id)connectedHost6;	// IMP=0x00000001014e5eb4
- (id)connectedHost4;	// IMP=0x00000001014e5e74
@property(readonly) unsigned short localPort;
@property(readonly) NSString *localHost;
@property(readonly) NSURL *connectedUrl;
@property(readonly) unsigned short connectedPort;
@property(readonly) NSString *connectedHost;
@property(readonly) _Bool isConnected;
@property(readonly) _Bool isDisconnected;
- (id)otherError:(id)arg1;	// IMP=0x00000001014e5134
- (id)connectionClosedError;	// IMP=0x00000001014e5048
- (id)writeTimeoutError;	// IMP=0x00000001014e4f5c
- (id)readTimeoutError;	// IMP=0x00000001014e4e70
- (id)readMaxedOutError;	// IMP=0x00000001014e4d84
- (id)connectTimeoutError;	// IMP=0x00000001014e4c98
- (id)errnoError;	// IMP=0x00000001014e4bc0
- (id)errnoErrorWithReason:(id)arg1;	// IMP=0x00000001014e4ab8
- (id)badParamError:(id)arg1;	// IMP=0x00000001014e496c
- (id)badConfigError:(id)arg1;	// IMP=0x00000001014e48ec
- (void)maybeClose;	// IMP=0x00000001014e4818
- (void)disconnectAfterReadingAndWriting;	// IMP=0x00000001014e4750
- (void)disconnectAfterWriting;	// IMP=0x00000001014e4688
- (void)disconnectAfterReading;	// IMP=0x00000001014e45c0
- (void)disconnect;	// IMP=0x00000001014e44c4
- (void)closeWithError:(id)arg1;	// IMP=0x00000001014e3fd8
- (void)doConnectTimeout;	// IMP=0x00000001014e3f7c
- (void)endConnectTimeout;	// IMP=0x00000001014e3ef4
- (void)startConnectTimeout:(double)arg1;	// IMP=0x00000001014e3d74
- (void)didNotConnect:(int)arg1 error:(id)arg2;	// IMP=0x00000001014e3d4c
- (void)didConnect:(int)arg1;	// IMP=0x00000001014e34e8
- (_Bool)connectWithAddressUN:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014e3114
- (_Bool)connectWithAddress4:(id)arg1 address6:(id)arg2 error:(id *)arg3;	// IMP=0x00000001014e2e54
- (void)closeUnusedSocket:(int)arg1;	// IMP=0x00000001014e2e18
- (void)closeSocket:(int)arg1;	// IMP=0x00000001014e2d84
- (void)connectSocket:(int)arg1 address:(id)arg2 stateIndex:(int)arg3;	// IMP=0x00000001014e2998
- (int)createSocket:(int)arg1 connectInterface:(id)arg2 errPtr:(id *)arg3;	// IMP=0x00000001014e28a4
- (_Bool)bindSocket:(int)arg1 toInterface:(id)arg2 error:(id *)arg3;	// IMP=0x00000001014e2784
- (void)lookup:(int)arg1 didFail:(id)arg2;	// IMP=0x00000001014e2704
- (void)lookup:(int)arg1 didSucceedWithAddress4:(id)arg2 address6:(id)arg3;	// IMP=0x00000001014e25d8
- (_Bool)connectToUrl:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x00000001014e2230
- (_Bool)connectToAddress:(id)arg1 viaInterface:(id)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x00000001014e1d34
- (_Bool)connectToAddress:(id)arg1 withTimeout:(double)arg2 error:(id *)arg3;	// IMP=0x00000001014e1d1c
- (_Bool)connectToAddress:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014e1d00
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 viaInterface:(id)arg3 withTimeout:(double)arg4 error:(id *)arg5;	// IMP=0x00000001014e1358
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;	// IMP=0x00000001014e1340
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x00000001014e1330
- (_Bool)preConnectWithUrl:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014e1170
- (_Bool)preConnectWithInterface:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014e0ed0
- (_Bool)doAccept:(int)arg1;	// IMP=0x00000001014e09fc
- (_Bool)acceptOnUrl:(id)arg1 error:(id *)arg2;	// IMP=0x00000001014e0034
- (_Bool)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 error:(id *)arg3;	// IMP=0x00000001014df33c
- (_Bool)acceptOnPort:(unsigned short)arg1 error:(id *)arg2;	// IMP=0x00000001014df320
@property(retain) id userData;
@property double alternateAddressDelay;
@property(getter=isIPv4PreferredOverIPv6) _Bool IPv4PreferredOverIPv6;
@property(getter=isIPv6Enabled) _Bool IPv6Enabled;
@property(getter=isIPv4Enabled) _Bool IPv4Enabled;
- (void)synchronouslySetDelegate:(id)arg1 delegateQueue:(id)arg2;	// IMP=0x00000001014de718
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2;	// IMP=0x00000001014de6c4
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2 synchronously:(_Bool)arg3;	// IMP=0x00000001014de504
- (void)getDelegate:(id *)arg1 delegateQueue:(id *)arg2;	// IMP=0x00000001014de2cc
- (void)synchronouslySetDelegateQueue:(id)arg1;	// IMP=0x00000001014de2bc
@property(retain) NSObject<OS_dispatch_queue> *delegateQueue;
- (void)setDelegateQueue:(id)arg1 synchronously:(_Bool)arg2;	// IMP=0x00000001014de16c
- (void)synchronouslySetDelegate:(id)arg1;	// IMP=0x00000001014ddff8
@property __weak id <XGGCDAsyncSocketDelegate> delegate;
- (void)setDelegate:(id)arg1 synchronously:(_Bool)arg2;	// IMP=0x00000001014ddea8
- (void)dealloc;	// IMP=0x00000001014ddbe0
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2 socketQueue:(id)arg3;	// IMP=0x00000001014dd96c
- (id)initWithDelegate:(id)arg1 delegateQueue:(id)arg2;	// IMP=0x00000001014dd90c
- (id)initWithSocketQueue:(id)arg1;	// IMP=0x00000001014dd8f0
- (id)init;	// IMP=0x00000001014dd8d8

@end

