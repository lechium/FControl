//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "FMetalDebugCommandEncoder.h"

#import "MTLRenderCommandEncoder.h"

@class FMetalDebugCommandBuffer, FMetalShaderPipeline, MTLRenderPassDescriptor, NSString;

@interface FMetalDebugRenderCommandEncoder : FMetalDebugCommandEncoder <MTLRenderCommandEncoder>
{
    MTLRenderPassDescriptor *RenderPassDesc;	// 32 = 0x20
    id <MTLRenderCommandEncoder> Inner;	// 40 = 0x28
    FMetalDebugCommandBuffer *Buffer;	// 48 = 0x30
    FMetalShaderPipeline *Pipeline;	// 56 = 0x38
}

+ (id)alloc;	// IMP=0x00000001021ea870
+ (id)allocWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001021ea854
+ (CDStruct_eb6fb79d *)classAllocator;	// IMP=0x00000001021ea848
@property(retain, nonatomic) FMetalShaderPipeline *Pipeline; // @synthesize Pipeline;
@property(readonly, retain) FMetalDebugCommandBuffer *Buffer; // @synthesize Buffer;
@property(readonly, retain) id <MTLRenderCommandEncoder> Inner; // @synthesize Inner;
- (void)setThreadgroupMemoryLength:(unsigned long long)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eb48c
- (void)dispatchThreadsPerTile:(CDStruct_14f26992)arg1;	// IMP=0x00000001021eb438
- (void)setTileSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x00000001021eb40c
- (void)setTileSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x00000001021eb3e0
- (void)setTileSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eb3b4
- (void)setTileSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eb388
- (void)setTileTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eb35c
- (void)setTileTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eb330
- (void)setTileBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x00000001021eb304
- (void)setTileBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eb2d8
- (void)setTileBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eb2ac
- (void)setTileBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eb280
- (void)setStencilStoreActionOptions:(unsigned long long)arg1;	// IMP=0x00000001021eb254
- (void)setDepthStoreActionOptions:(unsigned long long)arg1;	// IMP=0x00000001021eb228
- (void)setColorStoreActionOptions:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eb1fc
- (id)commandEncoder;	// IMP=0x00000001021eb1f8
- (void)validate;	// IMP=0x00000001021eb1f4
- (_Bool)validateFunctionBindings:(int)arg1;	// IMP=0x00000001021eb1ec
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)setScissorRects:(const CDStruct_33dcf794 *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000001021eb190
- (void)setViewports:(const CDStruct_8727d297 *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000001021eb164
- (void)useHeaps:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000001021eb138
- (void)useHeap:(id)arg1;	// IMP=0x00000001021eb10c
- (void)useResources:(const id *)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3;	// IMP=0x00000001021eb0e0
- (void)useResource:(id)arg1 usage:(unsigned long long)arg2;	// IMP=0x00000001021eb0b4
- (void)drawIndexedPatches:(unsigned long long)arg1 patchStart:(unsigned long long)arg2 patchCount:(unsigned long long)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned long long)arg5 controlPointIndexBuffer:(id)arg6 controlPointIndexBufferOffset:(unsigned long long)arg7 instanceCount:(unsigned long long)arg8 baseInstance:(unsigned long long)arg9;	// IMP=0x00000001021eb08c
- (void)drawPatches:(unsigned long long)arg1 patchStart:(unsigned long long)arg2 patchCount:(unsigned long long)arg3 patchIndexBuffer:(id)arg4 patchIndexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6 baseInstance:(unsigned long long)arg7;	// IMP=0x00000001021eb06c
- (void)setTessellationFactorScale:(float)arg1;	// IMP=0x00000001021eb054
- (void)setTessellationFactorBuffer:(id)arg1 offset:(unsigned long long)arg2 instanceStride:(unsigned long long)arg3;	// IMP=0x00000001021eb03c
- (void)waitForFence:(id)arg1 beforeStages:(unsigned long long)arg2;	// IMP=0x00000001021eb024
- (void)updateFence:(id)arg1 afterStages:(unsigned long long)arg2;	// IMP=0x00000001021eb00c
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexType:(unsigned long long)arg2 indexBuffer:(id)arg3 indexBufferOffset:(unsigned long long)arg4 indirectBuffer:(id)arg5 indirectBufferOffset:(unsigned long long)arg6;	// IMP=0x00000001021eaff4
- (void)drawPrimitives:(unsigned long long)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned long long)arg3;	// IMP=0x00000001021eafdc
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6 baseVertex:(long long)arg7 baseInstance:(unsigned long long)arg8;	// IMP=0x00000001021eafbc
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3 instanceCount:(unsigned long long)arg4 baseInstance:(unsigned long long)arg5;	// IMP=0x00000001021eafa4
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5;	// IMP=0x00000001021eaf8c
- (void)drawIndexedPrimitives:(unsigned long long)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 indexBuffer:(id)arg4 indexBufferOffset:(unsigned long long)arg5 instanceCount:(unsigned long long)arg6;	// IMP=0x00000001021eaf74
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3;	// IMP=0x00000001021eaf5c
- (void)drawPrimitives:(unsigned long long)arg1 vertexStart:(unsigned long long)arg2 vertexCount:(unsigned long long)arg3 instanceCount:(unsigned long long)arg4;	// IMP=0x00000001021eaf44
- (void)setStencilStoreAction:(unsigned long long)arg1;	// IMP=0x00000001021eaf2c
- (void)setDepthStoreAction:(unsigned long long)arg1;	// IMP=0x00000001021eaf14
- (void)setColorStoreAction:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eaefc
- (void)setVisibilityResultMode:(unsigned long long)arg1 offset:(unsigned long long)arg2;	// IMP=0x00000001021eaee4
- (void)setStencilFrontReferenceValue:(unsigned int)arg1 backReferenceValue:(unsigned int)arg2;	// IMP=0x00000001021eaecc
- (void)setStencilReferenceValue:(unsigned int)arg1;	// IMP=0x00000001021eaeb4
- (void)setDepthStencilState:(id)arg1;	// IMP=0x00000001021eae9c
- (void)setBlendColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;	// IMP=0x00000001021eae84
- (void)setFragmentSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x00000001021eae6c
- (void)setFragmentSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x00000001021eae54
- (void)setFragmentSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eae3c
- (void)setFragmentSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eae24
- (void)setFragmentTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eae0c
- (void)setFragmentTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eadf4
- (void)setFragmentBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x00000001021eaddc
- (void)setFragmentBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eadc4
- (void)setFragmentBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eadac
- (void)setFragmentBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021ead94
- (void)setTriangleFillMode:(unsigned long long)arg1;	// IMP=0x00000001021ead7c
- (void)setScissorRect:(CDStruct_33dcf794)arg1;	// IMP=0x00000001021ead38
- (void)setDepthBias:(float)arg1 slopeScale:(float)arg2 clamp:(float)arg3;	// IMP=0x00000001021ead20
- (void)setDepthClipMode:(unsigned long long)arg1;	// IMP=0x00000001021eacf4
- (void)setCullMode:(unsigned long long)arg1;	// IMP=0x00000001021eacdc
- (void)setFrontFacingWinding:(unsigned long long)arg1;	// IMP=0x00000001021eacc4
- (void)setViewport:(CDStruct_8727d297)arg1;	// IMP=0x00000001021eac78
- (void)setVertexSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x00000001021eac60
- (void)setVertexSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x00000001021eac48
- (void)setVertexSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eac30
- (void)setVertexSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eac18
- (void)setVertexTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000001021eac00
- (void)setVertexTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eabe8
- (void)setVertexBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x00000001021eabd0
- (void)setVertexBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x00000001021eabb8
- (void)setVertexBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eaba0
- (void)setVertexBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001021eab88
- (void)setRenderPipelineState:(id)arg1;	// IMP=0x00000001021eab70
- (void)popDebugGroup;	// IMP=0x00000001021eab28
- (void)pushDebugGroup:(id)arg1;	// IMP=0x00000001021eaad0
- (void)insertDebugSignpost:(id)arg1;	// IMP=0x00000001021eaa78
- (void)endEncoding;	// IMP=0x00000001021eaa30
@property(copy) NSString *label;
@property(readonly) id <MTLDevice> device;
- (void)dealloc;	// IMP=0x00000001021ea950
- (id)initWithEncoder:(id)arg1 fromDescriptor:(id)arg2 andCommandBuffer:(id)arg3;	// IMP=0x00000001021ea88c

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) unsigned long long tileHeight;
@property(readonly) unsigned long long tileWidth;

@end

