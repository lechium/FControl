//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FIRAPersistedConfig, FIRASqliteStore;

@interface FIRADatabase : NSObject
{
    FIRASqliteStore *_sqliteStore;	// 8 = 0x8
    FIRAPersistedConfig *_persistedConfig;	// 16 = 0x10
}

- (void).cxx_destruct;	// IMP=0x00000001008bcc44
- (_Bool)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5 createDictionaryBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000001008bca34
- (_Bool)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 error:(id *)arg6 createDictionaryBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000001008bc7bc
- (_Bool)insertDataType:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3 createDictionaryBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000001008bc670
- (id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4 createDataTypeBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000001008bc2d4
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3 createDataTypeBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000001008bc070
- (_Bool)ensureAllTables;	// IMP=0x00000001008ba818
- (id)conditionalUserPropertiesWithCondition:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;	// IMP=0x00000001008ba5b8
- (id)conditionalUserPropertiesWithPrefix:(id)arg1 filterByOrigin:(id)arg2 error:(id *)arg3;	// IMP=0x00000001008ba374
- (id)triggeredConditionalUserPropertiesWithEventName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008ba204
- (id)expiredConditionalUserPropertiesWithError:(id *)arg1;	// IMP=0x00000001008ba0d4
- (id)timedOutConditionalUserPropertiesWithError:(id *)arg1;	// IMP=0x00000001008b9fa4
- (_Bool)deleteConditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b9f68
- (_Bool)updateConditionalUserProperty:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b97f8
- (id)conditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b8fd8
- (id)insertIfNotDuplicatePurchaseFingerprint:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b8d10
- (id)lastRemoteConfigUpdateTimestamp:(id *)arg1;	// IMP=0x00000001008b8ce0
- (id)queryMeasurementConfigWithError:(id *)arg1;	// IMP=0x00000001008b8b7c
- (_Bool)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id *)arg2;	// IMP=0x00000001008b8a68
- (_Bool)updateRemoteConfig:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b884c
- (_Bool)deleteAllPropertyFilters:(id *)arg1;	// IMP=0x00000001008b8820
- (_Bool)deleteAllEventFilters:(id *)arg1;	// IMP=0x00000001008b87f4
- (_Bool)deletePropertyFilters:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b84ec
- (_Bool)deleteEventFilters:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b81e4
- (_Bool)updateFilterResults:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b7cf0
- (_Bool)updatePropertyFilters:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b77c4
- (_Bool)updateEventFilters:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b7298
- (_Bool)deleteFilterResults:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b6f58
- (id)filterResultForAudienceID:(int)arg1 error:(id *)arg2;	// IMP=0x00000001008b6e9c
- (id)propertyFiltersForPropertyName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b6c58
- (id)eventFiltersForEventName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b6a14
- (id)allAudienceIDs:(id *)arg1;	// IMP=0x00000001008b67e0
- (id)allFilterResults:(id *)arg1;	// IMP=0x00000001008b642c
- (_Bool)deleteUserAttributeWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b63f0
- (_Bool)updateUserAttribute:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b5f90
- (id)userAttributesIncludingInternal:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000001008b5d00
- (id)allLifetimeValueUserAttributes:(id *)arg1;	// IMP=0x00000001008b5ae4
- (id)userAttributeWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b58e8
- (id)containsUserAttributeWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b57dc
- (id)userAttributeCountForOrigin:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b56d0
- (id)publicUserAttributeCount:(id *)arg1;	// IMP=0x00000001008b56a0
- (_Bool)updateEventAggregates:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b51b4
- (id)eventAggregatesWithName:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b5130
- (id)allEventAggregates:(id *)arg1;	// IMP=0x00000001008b4cc8
- (id)publicEventCount:(id *)arg1;	// IMP=0x00000001008b4c98
- (id)containsRealtimeBundlesWithError:(id *)arg1;	// IMP=0x00000001008b4c68
- (id)queryLatestBundleTime:(id *)arg1;	// IMP=0x00000001008b4c38
- (_Bool)deleteStaleBundlesOlderThanMaxAge:(double)arg1 error:(id *)arg2;	// IMP=0x00000001008b4a80
- (id)maybeDeleteStaleData:(id *)arg1;	// IMP=0x00000001008b48dc
- (_Bool)deleteBundlesWithRowIDs:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b4630
- (id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 error:(id *)arg3;	// IMP=0x00000001008b4178
- (_Bool)insertBundle:(id)arg1 isRealtime:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000001008b3cdc
- (id)isQueuedBundleTableEmpty:(id *)arg1;	// IMP=0x00000001008b3cac
- (id)containsRealtimeRawEventsWithError:(id *)arg1;	// IMP=0x00000001008b3c7c
- (id)rawEventDataFromDictionary:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b3348
- (id)nextMetadataFingerprintToProcess:(id *)arg1;	// IMP=0x00000001008b31f4
- (_Bool)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 error:(id *)arg2;	// IMP=0x00000001008b3008
- (id)deleteRawEventsOverAbsoluteLimit:(id *)arg1;	// IMP=0x00000001008b2ec4
- (_Bool)deleteRawEventsWithMaxRowID:(long long)arg1 error:(id *)arg2;	// IMP=0x00000001008b2db8
- (id)containsRawEventWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;	// IMP=0x00000001008b2cc4
- (id)rawEventsWithMetadataFingerprint:(long long)arg1 error:(id *)arg2 eventFilter:(CDUnknownBlockType)arg3;	// IMP=0x00000001008b29e4
- (id)queryLatestRawEventTime:(id *)arg1;	// IMP=0x00000001008b29b4
- (_Bool)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 isRealtime:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000001008b2604
- (id)isRawEventsTableEmpty:(id *)arg1;	// IMP=0x00000001008b25d4
- (_Bool)deleteUnusedRawEventsMetadata:(id *)arg1;	// IMP=0x00000001008b2570
- (_Bool)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;	// IMP=0x00000001008b2464
- (id)queryRawEventsMetadataWithFingerprint:(long long)arg1 error:(id *)arg2;	// IMP=0x00000001008b2290
- (_Bool)insertIfNotExistsRawEventMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b2004
- (_Bool)updateDailyCounts:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b1d08
- (id)dailyCounts:(id *)arg1;	// IMP=0x00000001008b176c
- (_Bool)updateAppMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x00000001008b1730
- (id)queryAppMetadata:(id *)arg1;	// IMP=0x00000001008b14c8
- (_Bool)initializeAppMetadata;	// IMP=0x00000001008b1080
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;	// IMP=0x00000001008b1068
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2;	// IMP=0x00000001008b0d7c

@end

