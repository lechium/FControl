//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APM_META_INFO {
    char _field1[64];
    char _field2[64];
    char _field3[64];
    unsigned int _field4;
    unsigned short _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned short _field8;
    char _field9[64];
    unsigned long long _field10;
    char _field11[64];
    char _field12[64];
    unsigned short _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned int _field16;
    char _field17[64];
    char _field18[64];
    char _field19[64];
    char _field20[64];
    unsigned int _field21;
};

struct APM_STEAM_EVENT_BODY {
    char _field1[64];
    char _field2[64];
    char _field3[64];
    unsigned int _field4;
    unsigned long long _field5;
    unsigned short _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned short _field9;
    char _field10[64];
    char _field11[64];
    char _field12[64];
    unsigned short _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned int _field16;
    char _field17[64];
    char _field18[64];
    char _field19[64];
    char _field20[64];
    char _field21[64];
    char _field22[64];
    char _field23[64];
    unsigned short _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned long long _field27;
    unsigned long long _field28;
    unsigned int _field29;
    int _field30;
    int _field31;
    int _field32;
    unsigned long long _field33;
    int _field34;
    char _field35[64];
};

struct APMidasBasePayRequest {
    CDUnknownFunctionPointerType *_field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    basic_string_7c0a1c0b _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
    basic_string_7c0a1c0b _field13;
    basic_string_7c0a1c0b _field14;
    basic_string_7c0a1c0b _field15;
    basic_string_7c0a1c0b _field16;
    basic_string_7c0a1c0b _field17;
    basic_string_7c0a1c0b _field18;
    basic_string_7c0a1c0b _field19;
};

struct APMidasInitRequest {
    CDUnknownFunctionPointerType *_field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    basic_string_7c0a1c0b _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
};

struct AVHttpDelegate;

struct AVHttpRequest {
    struct AVHttpDelegate *_field1;
    id _field2;
    id _field3;
};

struct AVHttpResponse {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> URL_;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> version_;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> statusMsg_;
    int status_;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> body_;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> headers_;
};

struct AudioStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CAFunctionSelector {
    struct CTargetBase *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    void *_field7;
    void *_field8;
};

struct CDNVNotify;

struct CDNVRoomNotify;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGCloudVoiceHttp {
    struct AVHttpDelegate *_field1;
    struct AVHttpDelegate *_field2;
    struct AVHttpRequest _field3;
    struct AVHttpRequest _field4;
    struct GCloudVoiceEngine *_field5;
    struct Download_Upload_Data _field6;
    struct Download_Upload_Data _field7;
    char *_field8;
    int _field9;
    int _field10;
    int _field11;
    char _field12[256];
    int _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    int _field19;
    int _field20;
    _Bool _field21;
    _Bool _field22;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CMutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct CTargetBase;

struct CreateToolbarResult {
    id _field1;
    id _field2;
};

struct DownloadFileTaskImpl {
    CDUnknownFunctionPointerType *_field1;
    basic_string_7c0a1c0b _field2;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct CMutex _field5;
    basic_string_7c0a1c0b _field6;
    struct Listener *_field7;
    _Bool _field8;
    _Bool _field9;
    void *_field10;
};

struct Download_Upload_Data {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5[4];
};

struct ExcludeInfo;

struct FAvfMediaAudioSamplePool;

struct FAvfMediaPlayer {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    float _field5;
    int _field6;
    struct FTimespan _field7;
    struct FTimespan _field8;
    struct IMediaEventSink *_field9;
    struct FString _field10;
    id _field11;
    id _field12;
    struct FString _field13;
    id _field14;
    struct TQueue<TFunction<void ()>, EQueueMode::Spsc> _field15;
    struct FMediaSamples *_field16;
    _Bool _field17;
    struct FAvfMediaTracks *_field18;
    _Bool _field19;
    struct FPThreadsCriticalSection _field20;
    struct FDelegateHandle _field21;
    struct FDelegateHandle _field22;
};

struct FAvfMediaTracks {
    CDUnknownFunctionPointerType *_field1;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field2;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field3;
    struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> _field4;
    _Bool _field5;
    struct FAvfMediaAudioSamplePool *_field6;
    struct FPThreadsCriticalSection _field7;
    CDStruct_198678f7 _field8;
    id _field9;
    struct FMediaSamples *_field10;
    double _field11;
    int _field12;
    int _field13;
    int _field14;
    struct AudioStreamBasicDescription _field15;
    struct TSharedPtr<FAvfMediaVideoSampler, ESPMode::Fast> _field16;
    _Bool _field17;
};

struct FAvfMediaVideoSampler;

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FDelegateHandle {
    unsigned long long _field1;
};

struct FEvent {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct FIRReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct FIndexedPointer {
    unsigned long long Ptrs;
};

struct FKeyboardConfig {
    long long _field1;
    long long _field2;
    long long _field3;
    _Bool _field4;
};

struct FLockFreePointerListLIFORoot<0, 1> {
    struct FPaddingForCacheContention<0> PadToAvoidContention1;
    struct FIndexedPointer Head;
    struct FPaddingForCacheContention<0> PadToAvoidContention2;
};

struct FMTLHeapDescriptor {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
};

struct FMediaSamples;

struct FMetalRingBuffer;

struct FPThreadsCriticalSection {
    struct _opaque_pthread_mutex_t _field1;
};

struct FPaddingForCacheContention<0>;

struct FReferenceControllerBase;

struct FScriptContainerElement;

struct FSharedReferencer<ESPMode::Fast> {
    struct FReferenceControllerBase *ReferenceController;
};

struct FString {
    struct TArray<char16_t, FDefaultAllocator> _field1;
};

struct FText {
    struct TSharedRef<ITextData, ESPMode::Fast> TextData;
    unsigned int Flags;
};

struct FTimespan {
    long long _field1;
};

struct FTurnBasedEventDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct FTurnBasedMatchmakerDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct ForAnyElementType {
    struct FScriptContainerElement *Data;
};

struct FrameStateJudger {
    struct MsgQueue<SnapshotState> *_field1;
};

struct GADAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GCloudVoiceCommonNotify;

struct GCloudVoiceConfigNotify;

struct GCloudVoiceEngine {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    int _field6;
    struct IGCloudVoiceNotify *_field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    struct MessageQueue _field25;
    unsigned int _field26[100];
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field27;
    long long _field28;
    long long _field29;
    int _field30;
    int _field31;
    _Bool _field32;
    _Bool _field33;
    struct timeval _field34;
    struct timeval _field35;
    struct timeval _field36;
    struct ISpeechEngine *_field37;
    struct TVENetNotify *_field38;
    struct GCloudVoiceCommonNotify *_field39;
    struct CDNVRoomNotify *_field40;
    struct CDNVNotify *_field41;
    struct GCloudVoiceConfigNotify *_field42;
    int _field43;
    struct CGCloudVoiceHttp _field44;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field45;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field46;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field47;
    int _field48;
    int _field49;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field50;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field51;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field52;
    _Bool _field53;
    _Bool _field54;
    int _field55;
    _Bool _field56;
    struct IVoiceExtensionPluginObserver *_field57;
    struct IRoomAgent *_field58[16];
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field59[16];
    struct IRoomAgent *_field60;
    struct IRoomAgent *_field61;
    int _field62;
    _Bool _field63;
    _Bool _field64;
    _Bool _field65;
    struct timeval _field66;
    _Bool _field67;
    int _field68;
    struct map<std::basic_string<char>, int, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> _field69;
};

struct GSDKObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct HsSRDelegateAvailableMethods {
    unsigned int HsDidReceiveMessage:1;
    unsigned int HsDidReceiveMessageWithString:1;
    unsigned int HsDidReceiveMessageWithData:1;
    unsigned int HsDidOpenta:1;
    unsigned int HsDidFailWithError:1;
    unsigned int HsDidCloseWithCode:1;
    unsigned int HsDidReceivePing:1;
    unsigned int HsDidReceivePong:1;
    unsigned int HsShouldConvertTextFrameToString:1;
};

struct ICMPPacket {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct IGCloudVoiceNotify;

struct IMSDKAccount {
    basic_string_7c0a1c0b _field1;
    int _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
};

struct IMSDKAuthConnectResult {
    int _field1;
    basic_string_7c0a1c0b _field2;
    int _field3;
    basic_string_7c0a1c0b _field4;
    int _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    basic_string_7c0a1c0b _field9;
    int _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
    int _field13;
};

struct IMSDKAuthResult {
    int _field1;
    basic_string_7c0a1c0b _field2;
    int _field3;
    basic_string_7c0a1c0b _field4;
    int _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    int _field8;
    int _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
    long long _field13;
    _Bool _field14;
    struct vector<IMSDKAuthSNSInfo, std::__1::allocator<IMSDKAuthSNSInfo>> _field15;
};

struct IMSDKAuthSNSInfo;

struct IMSDKFriendRequestInfo {
    basic_string_7c0a1c0b _field1;
    int _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
};

struct IMSDKLoginResult {
    int _field1;
    basic_string_7c0a1c0b _field2;
    int _field3;
    basic_string_7c0a1c0b _field4;
    int _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    int _field8;
    int _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
    long long _field13;
    int _field14;
    basic_string_7c0a1c0b _field15;
    basic_string_7c0a1c0b _field16;
    basic_string_7c0a1c0b _field17;
    basic_string_7c0a1c0b _field18;
    basic_string_7c0a1c0b _field19;
    basic_string_7c0a1c0b _field20;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field21;
    long long _field22;
    basic_string_7c0a1c0b _field23;
};

struct IMSDKResult {
    int _field1;
    basic_string_7c0a1c0b _field2;
    int _field3;
    basic_string_7c0a1c0b _field4;
    int _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
};

struct IMediaEventSink;

struct IRoomAgent;

struct ISpeechEngine;

struct ITextData;

struct IVirtualKeyboardEntry;

struct IVoiceExtensionPluginObserver;

struct IniFile;

struct Listener;

struct MessageQueue {
    struct Mutex _field1;
    struct deque<apollo::NoticeMessage, std::allocator<apollo::NoticeMessage>> _field2;
};

struct MidasGetInfoCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct MidasGetIntroPriceCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct MidasGetProductCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct MidasInitCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct MidasPayCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct MsgQueue {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    struct _opaque_pthread_mutex_t _field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _MsgQueueBody *_field8;
    char *_field9;
};

struct MsgQueue<ExcludeInfo> {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    _Bool _field4;
    struct _opaque_pthread_mutex_t _field5;
    struct ExcludeInfo *_field6;
};

struct MsgQueue<SnapshotState>;

struct Mutex {
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } mutex_;
    _Bool is_safe_;
};

struct NSDictionary {
    Class _field1;
};

struct NoticeMessage;

struct ObjectOperation;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct SDKStack<_tagElement> {
    unsigned int _field1;
    struct _tagElement *_field2;
    int _field3;
};

struct SDKWriteBuffer {
    char *beginPtr;
    int length;
    int position;
};

struct STREAM_EVENT {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    char _field7[64];
    long long _field8;
};

struct StreamEventAuditMgr {
    char _field1[512];
    long long _field2;
    int _field3;
    char _field4[512];
    char _field5[512];
    char _field6[512];
    char _field7[512];
    id _field8;
    struct STREAM_EVENT _field9;
    struct TApmMutex _field10;
    id _field11;
    _Bool _field12;
    _Bool _field13;
};

struct StreamEventCommitter {
    int _field1;
    struct StreamEventAuditMgr *_field2;
};

struct StreamEventHandler {
    struct StreamEventMsgQueue *_field1;
    struct StreamEventMsgQueue *_field2;
    struct StreamEventAuditMgr *_field3;
    char _field4[128];
    char _field5[256];
    struct APM_STEAM_EVENT_BODY _field6;
    struct map<int, long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, long>>> _field7;
    id _field8;
};

struct StreamEventMsgQueue;

struct TApmMutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct TArray<FAvfMediaTracks::FTrack, FDefaultAllocator> {
    struct ForAnyElementType _field1;
    int _field2;
    int _field3;
};

struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> {
    ForElementType_c283f1aa AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<FMetalDebugCommand *, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<112, 8>>, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TArray<char16_t, FDefaultAllocator> {
    struct ForAnyElementType _field1;
    int _field2;
    int _field3;
};

struct TArray<unsigned char, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
};

struct TBaseDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, EPurchaseTransactionState> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, NSDictionary *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &> {
    ForElementType_e8e2103b DelegateAllocator;
    int DelegateSize;
};

struct TBaseDelegate<void, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
};

struct TBitArray<FDefaultBitArrayAllocator> {
    ForElementType_f51d7a19 AllocatorInstance;
    int NumBits;
    int MaxBits;
};

struct TLockFreePointerListLIFO<FMetalDebugCommandEncoder> {
    struct FLockFreePointerListLIFORoot<0, 1> RootList;
};

struct TMap<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, FDefaultSetAllocator, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>> {
    struct TSet<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>, FDefaultSetAllocator> Pairs;
};

struct TMulticastDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, EPurchaseTransactionState> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TMulticastDelegate<void, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
};

struct TNode;

struct TPadding {
    unsigned char Pad[16];
};

struct TQueue<TFunction<void ()>, EQueueMode::Spsc> {
    struct TNode *_field1;
    struct TNode *_field2;
};

struct TSet<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>, TDefaultMapHashableKeyFuncs<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSet<id, DefaultKeyFuncs<id, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<id>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSet<id<MTLResource>, DefaultKeyFuncs<id<MTLResource>, false>, FDefaultSetAllocator> {
    struct TSparseArray<TSetElement<id<MTLResource>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> Elements;
    ForElementType_a3459e67 Hash;
    int HashSize;
};

struct TSharedPtr<FAvfMediaVideoSampler, ESPMode::Fast> {
    struct FAvfMediaVideoSampler *_field1;
    struct FSharedReferencer<ESPMode::Fast> _field2;
};

struct TSharedPtr<FMetalRingBuffer, ESPMode::Fast> {
    struct FMetalRingBuffer *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSharedPtr<IVirtualKeyboardEntry, ESPMode::Fast> {
    struct IVirtualKeyboardEntry *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSharedRef<ITextData, ESPMode::Fast> {
    struct ITextData *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
};

struct TSparseArray<TSetElement<TTuple<FMetalTextureDesc, NSMutableSet<id<MTLTexture>>*>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<112, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TSparseArray<TSetElement<id<MTLResource>>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TSparseArray<TSetElement<id>, TSparseArrayAllocator<FDefaultAllocator, FDefaultBitArrayAllocator>> {
    struct TArray<TSparseArrayElementOrFreeListLink<TAlignedBytes<16, 8>>, FDefaultAllocator> Data;
    struct TBitArray<FDefaultBitArrayAllocator> AllocationFlags;
    int FirstFreeIndex;
    int NumFreeIndices;
};

struct TTypeCompatibleBytes<FDelegateBase> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<FSetElementId> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> {
    struct TPadding Padding;
};

struct TTypeCompatibleBytes<unsigned int> {
    struct TPadding Padding;
};

struct TVENetNotify;

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UploadTaskImpl {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct ObjectOperation *_field3;
    CDUnknownFunctionPointerType *_field4;
    basic_string_7c0a1c0b _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
    CDUnknownFunctionPointerType *_field7;
    struct IniFile *_field8;
    basic_string_7c0a1c0b _field9;
    basic_string_7c0a1c0b _field10;
    struct Listener *_field11;
    _Bool _field12;
    _Bool _field13;
    struct CMutex _field14;
    void *_field15;
};

struct _Alloc_hider {
    char *_M_p;
};

struct _DataPerSec {
    char flag;
    short fps;
    short appCpuUsage;
    int timeInterval;
    int appMemoryUsed;
    int reserved[4];
    int netSend;
    int netRecv;
    int reserved1;
    int reserved2;
};

struct _Deque_impl {
    struct NoticeMessage **_field1;
    unsigned long long _field2;
    struct _Deque_iterator<apollo::NoticeMessage, apollo::NoticeMessage &, apollo::NoticeMessage *> _field3;
    struct _Deque_iterator<apollo::NoticeMessage, apollo::NoticeMessage &, apollo::NoticeMessage *> _field4;
};

struct _Deque_iterator<apollo::NoticeMessage, apollo::NoticeMessage &, apollo::NoticeMessage *> {
    struct NoticeMessage *_field1;
    struct NoticeMessage *_field2;
    struct NoticeMessage *_field3;
    struct NoticeMessage **_field4;
};

struct _MidasStuKeyProcessor {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _MsgQueueBody {
    char *charValue;
    char flag;
    char int8Value;
    short int16Value;
    int int32Value;
    long long int64Value;
    void *voidPtr;
    short sceneType;
    short sceneIndex;
    int drawcall;
    int triangle;
    unsigned int timeInterval;
    int deltaSeconds;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _M_impl;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _Scene {
    char _field1;
    short _field2;
    short _field3;
    int _field4;
    short _field5;
    char *_field6;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long _field1;
    char _field2[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _M_dataplus;
};

struct deque<apollo::NoticeMessage, std::allocator<apollo::NoticeMessage>> {
    struct _Deque_impl _field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<std::basic_string<char>>;

struct map<int, long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, long>>> {
    struct __tree<std::__1::__value_type<int, long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, long>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, int, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _M_t;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct rt_metrics {
    unsigned int rmx_locks;
    unsigned int rmx_mtu;
    unsigned int rmx_hopcount;
    int rmx_expire;
    unsigned int rmx_recvpipe;
    unsigned int rmx_sendpipe;
    unsigned int rmx_ssthresh;
    unsigned int rmx_rtt;
    unsigned int rmx_rttvar;
    unsigned int rmx_pksent;
    unsigned int rmx_filler[4];
};

struct rt_msghdr2 {
    unsigned short rtm_msglen;
    unsigned char rtm_version;
    unsigned char rtm_type;
    unsigned short rtm_index;
    int rtm_flags;
    int rtm_addrs;
    int rtm_refcnt;
    int rtm_parentflags;
    int rtm_reserved;
    int rtm_use;
    unsigned int rtm_inits;
    struct rt_metrics rtm_rmx;
};

struct sockaddr {
    unsigned char sa_len;
    unsigned char sa_family;
    char sa_data[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long long tm_gmtoff;
    char *tm_zone;
};

struct vector<IMSDKAuthSNSInfo, std::__1::allocator<IMSDKAuthSNSInfo>> {
    struct IMSDKAuthSNSInfo *_field1;
    struct IMSDKAuthSNSInfo *_field2;
    struct __compressed_pair<IMSDKAuthSNSInfo *, std::__1::allocator<IMSDKAuthSNSInfo>> {
        struct IMSDKAuthSNSInfo *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_7c0a1c0b *_field1;
    basic_string_7c0a1c0b *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_7c0a1c0b *_field1;
    } _field3;
};

struct vng_tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct ?<FDelegateBase> {
    struct FScriptContainerElement *Data;
} ForElementType_72715528;

typedef struct ?<FSetElementId> {
    struct FScriptContainerElement *Data;
} ForElementType_7284640b;

typedef struct ?<TAlignedBytes<16, 16>> {
    struct FScriptContainerElement *Data;
} ForElementType_0fbc14d5;

typedef struct ?<unsigned int> {
    struct FScriptContainerElement *Data;
} ForElementType_3f67a483;

typedef struct ?<FDelegateBase> {
    struct TTypeCompatibleBytes<FDelegateBase> InlineData[1];
    ForElementType_72715528 SecondaryData;
} ForElementType_c283f1aa;

typedef struct ?<FSetElementId> {
    struct TTypeCompatibleBytes<FSetElementId> InlineData[1];
    ForElementType_7284640b SecondaryData;
} ForElementType_a3459e67;

typedef struct ?<TAlignedBytes<16, 16>> {
    struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> InlineData[2];
    ForElementType_0fbc14d5 SecondaryData;
} ForElementType_e8e2103b;

typedef struct ?<unsigned int> {
    struct TTypeCompatibleBytes<unsigned int> InlineData[4];
    ForElementType_3f67a483 SecondaryData;
} ForElementType_f51d7a19;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    unsigned char _field4;
    _Bool _field5;
    unsigned long long _field6;
} CDStruct_8455587e;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_33dcf794;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    long long _field3;
    long long _field4;
    long long _field5;
    _Bool _field6;
    _Bool _field7;
} CDStruct_4c437055;

typedef struct {
    void *_field1;
    long long _field2;
} CDStruct_eb6fb79d;

typedef struct {
    char _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
} CDStruct_13d97d58;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
} CDStruct_8727d297;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_27b5ccfc;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    CDStruct_14f26992 _field1;
    CDStruct_14f26992 _field2;
} CDStruct_4c83c94d;

typedef struct {
    struct vng_tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_b33206b2;

// Template types
typedef struct TArray<unsigned char, FDefaultAllocator> {
    struct ForAnyElementType AllocatorInstance;
    int ArrayNum;
    int ArrayMax;
} TArray_e98fc9dd;

typedef struct TBaseDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_42bf5e4a;

typedef struct TBaseDelegate<void, EPurchaseTransactionState> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_e7e2b5bd;

typedef struct TBaseDelegate<void, NSDictionary *> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_8ad3ede0;

typedef struct TBaseDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_867a88d4;

typedef struct TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &> {
    ForElementType_e8e2103b DelegateAllocator;
    int DelegateSize;
} TBaseDelegate_6994a642;

typedef struct TBaseDelegate<void, const FStoreKitTransactionData &> {
    struct ForElementType<TAlignedBytes<16, 16>> {
        struct TTypeCompatibleBytes<TAlignedBytes<16, 16>> _field1[2];
        struct ForElementType<TAlignedBytes<16, 16>> {
            struct FScriptContainerElement *_field1;
        } _field2;
    } _field1;
    int _field2;
} TBaseDelegate_af776a3a;

typedef struct TLockFreePointerListLIFO<FMetalDebugCommandEncoder> {
    struct FLockFreePointerListLIFORoot<0, 1> RootList;
} TLockFreePointerListLIFO_b3862b72;

typedef struct TMulticastDelegate<void, EPurchaseTransactionState, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_2b2adb1e;

typedef struct TMulticastDelegate<void, EPurchaseTransactionState> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_dad13ae6;

typedef struct TMulticastDelegate<void, SKProductsResponse *, const TBaseDelegate<void, bool, const TArray<FString, FDefaultAllocator>&, const FString &>&> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_22137c99;

typedef struct TMulticastDelegate<void, const FStoreKitTransactionData &> {
    struct TArray<FDelegateBase, TInlineAllocator<1, FDefaultAllocator>> InvocationList;
    int CompactionThreshold;
    int InvocationListLockCount;
} TMulticastDelegate_12b8021a;

typedef struct TSharedPtr<FMetalRingBuffer, ESPMode::Fast> {
    struct FMetalRingBuffer *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
} TSharedPtr_ad1d9620;

typedef struct TSharedPtr<IVirtualKeyboardEntry, ESPMode::Fast> {
    struct IVirtualKeyboardEntry *Object;
    struct FSharedReferencer<ESPMode::Fast> SharedReferenceCount;
} TSharedPtr_2699a924;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

