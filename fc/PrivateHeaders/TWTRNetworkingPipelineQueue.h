//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSError, NSHashTable, NSMapTable, NSMutableSet, NSObject<OS_dispatch_queue>, NSOperationQueue, NSURLSession;

@interface TWTRNetworkingPipelineQueue : NSObject
{
    _Bool _fetchingSession;	// 8 = 0x8
    _Bool _logNetworkRequest;	// 9 = 0x9
    long long _queueType;	// 16 = 0x10
    id <TWTRNetworkingResponseValidating> _responseValidator;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_serialAccessQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_cancellationSupportQueue;	// 40 = 0x28
    id _session;	// 48 = 0x30
    NSError *_sessionFetchError;	// 56 = 0x38
    NSOperationQueue *_operationQueue;	// 64 = 0x40
    NSURLSession *_URLSession;	// 72 = 0x48
    NSMapTable *_inFlightTasks;	// 80 = 0x50
    NSHashTable *_invokedPackages;	// 88 = 0x58
    NSMutableSet *_pendingCancellations;	// 96 = 0x60
}

+ (id)fetchCancelledErrorForPackage:(id)arg1;	// IMP=0x00000001008121d8
+ (id)sessionFetchFailureError;	// IMP=0x00000001008120f8
+ (id)userPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2;	// IMP=0x000000010080fc24
+ (id)guestPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2;	// IMP=0x000000010080fba0
@property(readonly, nonatomic) _Bool logNetworkRequest; // @synthesize logNetworkRequest=_logNetworkRequest;
@property(readonly, nonatomic) NSMutableSet *pendingCancellations; // @synthesize pendingCancellations=_pendingCancellations;
@property(readonly, nonatomic) NSHashTable *invokedPackages; // @synthesize invokedPackages=_invokedPackages;
@property(readonly, nonatomic) NSMapTable *inFlightTasks; // @synthesize inFlightTasks=_inFlightTasks;
@property(readonly, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSError *sessionFetchError; // @synthesize sessionFetchError=_sessionFetchError;
@property(retain, nonatomic) id session; // @synthesize session=_session;
@property(nonatomic, getter=isFetchingSession) _Bool fetchingSession; // @synthesize fetchingSession=_fetchingSession;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *cancellationSupportQueue; // @synthesize cancellationSupportQueue=_cancellationSupportQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialAccessQueue; // @synthesize serialAccessQueue=_serialAccessQueue;
@property(readonly, nonatomic) id <TWTRNetworkingResponseValidating> responseValidator; // @synthesize responseValidator=_responseValidator;
@property(readonly, nonatomic) long long queueType; // @synthesize queueType=_queueType;
- (void).cxx_destruct;	// IMP=0x0000000100812480
- (void)syncLocalTime:(id)arg1;	// IMP=0x0000000100812080
- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100811fb4
- (void)invokeCallbackForPackage:(id)arg1 withData:(id)arg2 response:(id)arg3 error:(id)arg4;	// IMP=0x0000000100811e48
- (void)invokeCancelCallbackForPackage:(id)arg1;	// IMP=0x0000000100811d88
- (void)packageRequest:(id)arg1 session:(id)arg2 didReceiveResponse:(id)arg3 data:(id)arg4;	// IMP=0x0000000100811c4c
- (void)packageRequest:(id)arg1 session:(id)arg2 didReceiveError:(id)arg3;	// IMP=0x0000000100811b30
- (void)sendRequestForPackage:(id)arg1 withSignedRequest:(id)arg2;	// IMP=0x00000001008117d8
- (void)withCancellationSupportQueueSync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100811774
- (void)withCancellationSupportQueueAsync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100811710
- (_Bool)isPackageCancelled:(id)arg1 shouldRemoveIfNecessary:(_Bool)arg2;	// IMP=0x0000000100811498
- (void)markPackageAsCancelled:(id)arg1;	// IMP=0x000000010081123c
- (void)appendInFlightTask:(id)arg1 forPackage:(id)arg2;	// IMP=0x000000010081107c
- (void)endFetchingOrRefreshingSession;	// IMP=0x0000000100810ff4
- (void)beginFetchingOrRefreshingSession;	// IMP=0x0000000100810f6c
- (void)handleSessionStoreResponse:(id)arg1 error:(id)arg2;	// IMP=0x0000000100810db0
- (void)refreshSession:(id)arg1 forPackage:(id)arg2;	// IMP=0x0000000100810aac
- (void)fetchSessionForPackage:(id)arg1;	// IMP=0x0000000100810720
- (void)cancelAllPendingRequests;	// IMP=0x00000001008106e0
- (void)fetchSessionIfNeededForPackage:(id)arg1;	// IMP=0x000000010081054c
- (CDUnknownBlockType)requestSigningCancelBlock:(id)arg1;	// IMP=0x00000001008103f8
- (CDUnknownBlockType)requestSigningSuccessBlock:(id)arg1;	// IMP=0x0000000100810280
- (id)userRequestSigningOperationWithPackage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000010081015c
- (id)guestRequestSigningOperationWithPackage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 cancelBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000100810038
- (id)requestSigningOperationWithPackage:(id)arg1;	// IMP=0x000000010080ff5c
- (id)enqueuePipelinePackage:(id)arg1;	// IMP=0x000000010080fca8
- (id)initWithType:(long long)arg1 URLSession:(id)arg2 responseValidator:(id)arg3;	// IMP=0x000000010080f8d4

@end

