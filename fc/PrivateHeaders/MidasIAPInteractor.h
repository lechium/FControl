//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MidasProtocolHider.h"

@class MidasIAPPayReq, MidasIAPPayResp, MidasIAPReprovideOperation, MidasOperationLoop, NSDictionary, NSMutableArray;

@interface MidasIAPInteractor : MidasProtocolHider
{
    _Bool _inited;	// 8 = 0x8
    MidasOperationLoop *_opLoop;	// 16 = 0x10
    MidasIAPPayReq *_oriReq;	// 24 = 0x18
    MidasIAPPayResp *_lastResp;	// 32 = 0x20
    _Bool _initGetCfgOK;	// 40 = 0x28
    MidasIAPReprovideOperation *_reprovideOp;	// 48 = 0x30
    _Bool _showLoadingAfterDismissVc;	// 56 = 0x38
    CDUnknownBlockType _promotedIAPCallback;	// 64 = 0x40
    NSDictionary *_mpInfo;	// 72 = 0x48
    id <MidasVerifyCodeService> _verifyCodeService;	// 80 = 0x50
    id <MidasWebResultService> _webResultService;	// 88 = 0x58
    id <MidasProcessProtocol> _mainProcess;	// 96 = 0x60
    NSMutableArray *_mutableTempReqs;	// 104 = 0x68
}

+ (id)sharedInstance;	// IMP=0x0000000100549384
- (void).cxx_destruct;	// IMP=0x0000000100554944
- (_Bool)midas_paymentQueue:(id)arg1 shouldAddStorePayment:(id)arg2 forProduct:(id)arg3;	// IMP=0x0000000100554818
- (void)midas_paymentQueueRestoreCompletedTransactionsFinished:(id)arg1;	// IMP=0x0000000100554660
- (void)midas_paymentQueue:(id)arg1 midas_restoreCompletedTransactionsFailedWithError:(id)arg2;	// IMP=0x000000010055448c
- (void)midas_paymentQueue:(id)arg1 midas_updatedTransactions:(id)arg2;	// IMP=0x0000000100553f04
- (id)operationFromRestoreReq:(id)arg1 delegate:(id)arg2;	// IMP=0x0000000100553a9c
- (id)operationFromPayReq:(id)arg1 delegate:(id)arg2;	// IMP=0x00000001005530c8
- (void)processManualReprovideQueue:(id)arg1 transactions:(id)arg2 fromOperation:(id)arg3 hasSameProductId:(_Bool)arg4;	// IMP=0x0000000100552b00
- (void)processInitReprovideQueue:(id)arg1 transactions:(id)arg2;	// IMP=0x0000000100552658
- (void)blockProcessGetShortOpenidSucess:(id)arg1 resp:(id)arg2 operation:(id)arg3;	// IMP=0x00000001005523f0
- (void)blockProcessGetShortOpenidCgiError:(id)arg1 errorCode:(long long)arg2 inner:(id)arg3 msg:(id)arg4 operation:(id)arg5;	// IMP=0x0000000100552358
- (void)blockProcessGetShortOpenidNetError:(id)arg1 operation:(id)arg2;	// IMP=0x0000000100552308
- (void)processPreheatByMpInfo:(id)arg1 offerId:(id)arg2;	// IMP=0x0000000100551e00
- (void)blockProcessMpSucess:(id)arg1 resp:(id)arg2 operation:(id)arg3;	// IMP=0x0000000100551a18
- (void)blockProcessMpCgiError:(id)arg1 errorCode:(long long)arg2 inner:(id)arg3 msg:(id)arg4 operation:(id)arg5;	// IMP=0x00000001005517bc
- (void)blockProcessMpNetError:(id)arg1 operation:(id)arg2;	// IMP=0x0000000100551688
- (id)operationFromMpReq:(id)arg1 delegate:(id)arg2;	// IMP=0x0000000100551228
- (void)addGetConfigOperation;	// IMP=0x0000000100551040
- (void)launchGetConfig;	// IMP=0x0000000100551034
- (_Bool)checkMainThreadAndRegister:(_Bool)arg1;	// IMP=0x0000000100550ec0
- (void)uploadDeviceInfo:(id)arg1;	// IMP=0x00000001005506bc
- (_Bool)validateInitParamOfReq:(id)arg1 environment:(id)arg2 locale:(id)arg3 extra:(id)arg4;	// IMP=0x0000000100550188
- (void)setPromotedIAPCallback:(CDUnknownBlockType)arg1;	// IMP=0x0000000100550148
- (void)showPayResultAlert:(id)arg1 withTitle:(id)arg2 body:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000100550000
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010054fe0c
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010054fb10
- (void)onManualReprovideResp:(id)arg1;	// IMP=0x000000010054f1b8
- (void)setInitGetCfgResult:(_Bool)arg1;	// IMP=0x000000010054eeb4
- (void)manualReprovideFromOperation:(id)arg1 hasSameProductId:(_Bool)arg2 dialog:(_Bool)arg3;	// IMP=0x000000010054eaa0
- (void)showWXPromotion:(id)arg1 tips:(id)arg2 cancelBtn:(id)arg3 okBtn:(id)arg4 jumpUrl:(id)arg5 completion:(CDUnknownBlockType)arg6 orderInfo:(id)arg7 userInfo:(id)arg8;	// IMP=0x000000010054e00c
- (void)showRiskAlert:(id)arg1 errorCode:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010054dfac
- (void)launchIdentifyPage:(id)arg1 resp:(id)arg2 delegate:(id)arg3;	// IMP=0x000000010054dc30
- (void)launchResultPage:(id)arg1 resp:(id)arg2 delegate:(id)arg3;	// IMP=0x000000010054d930
- (void)launchVerifyPage:(id)arg1 closedBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010054d6fc
- (void)backToGame:(id)arg1 isSuccess:(_Bool)arg2 delegate:(id)arg3;	// IMP=0x000000010054d630
- (void)buyAgain:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054d4d0
- (void)launchRestore:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054d194
- (void)launchPay:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054c7bc
- (void)safeReleaseIntroPriceRequester:(id)arg1;	// IMP=0x000000010054c79c
- (void)queryIntroPriceInfo:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054c408
- (void)queryProductInfo:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054be80
- (void)queryShortOpenid:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054b1bc
- (void)queryMpInfo:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010054a744
- (id)getCurrMainProcess;	// IMP=0x000000010054a734
- (_Bool)isIAPEnable;	// IMP=0x000000010054a5f0
- (_Bool)inited;	// IMP=0x000000010054a5e0
- (void)dealloc;	// IMP=0x000000010054a564
- (void)checkReprovide;	// IMP=0x000000010054a2b0
- (_Bool)initializeWithReq:(id)arg1 environment:(id)arg2 locale:(id)arg3 extra:(id)arg4 reprovideDelegate:(id)arg5;	// IMP=0x0000000100549860
- (id)init;	// IMP=0x0000000100549764

@end

