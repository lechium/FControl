//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "VungleAdDelegate.h"
#import "VunglePlacementsCoordinatorDelegate.h"
#import "VungleRequestStreamingAdControllerDelegate.h"
#import "VungleSDKInitializerDelegate.h"
#import "VungleStreamingConfigurableDelegate.h"

@class CADisplayLink, NSDictionary, NSObject<VungleSDKCreativeTracking>, NSString, NSUserDefaults, UIViewController, VungleAdViewController, VungleCacheManager, VungleConfigController, VungleCustomMRAIDViewController, VungleDeviceInformationProvider, VungleFlexViewPresentationManager, VungleHTTPLogSender, VungleInternalMRAIDViewController, VungleLogCoordinator, VungleNetworkManager, VungleNewRequestController, VunglePlacementsCoordinator, VunglePlayOptionsProvider, VunglePlayabilityCoordinator, VunglePublisherInformation, VungleReportAdController, VungleReportIncentivizedController, VungleRequestAdController, VungleRequestStreamingAdController, VungleSDKInitializer, VungleSleepHandler, VungleUserSegmentationController, VungleVDUIDProvider;

@interface VungleSDK : NSObject <VungleRequestStreamingAdControllerDelegate, VungleStreamingConfigurableDelegate, VungleSDKInitializerDelegate, VunglePlacementsCoordinatorDelegate, VungleAdDelegate>
{
    _Bool _muted;	// 8 = 0x8
    _Bool _initialized;	// 9 = 0x9
    _Bool _loggingEnabled;	// 10 = 0xa
    _Bool _isPlaying;	// 11 = 0xb
    _Bool _didStartup;	// 12 = 0xc
    _Bool _headerBiddingEnabled;	// 13 = 0xd
    _Bool _successfulAdView;	// 14 = 0xe
    _Bool _adDismissInProgress;	// 15 = 0xf
    _Bool _validCTAURLResolved;	// 16 = 0x10
    NSDictionary *_userData;	// 24 = 0x18
    VungleNetworkManager *_networkManager;	// 32 = 0x20
    unsigned long long _presentationMode;	// 40 = 0x28
    CADisplayLink *_link;	// 48 = 0x30
    double _startTime;	// 56 = 0x38
    double _preventPlayUntilTime;	// 64 = 0x40
    id _playableEventTimer;	// 72 = 0x48
    UIViewController *_tmpViewController;	// 80 = 0x50
    VungleAdViewController *_currentAdViewController;	// 88 = 0x58
    NSUserDefaults *_defaults;	// 96 = 0x60
    VungleRequestAdController *_requestAdController;	// 104 = 0x68
    VunglePlacementsCoordinator *_placementsCoordinator;	// 112 = 0x70
    VungleConfigController *_configController;	// 120 = 0x78
    VungleNewRequestController *_createNewRequestController;	// 128 = 0x80
    VungleRequestStreamingAdController *_requestStreamingAdController;	// 136 = 0x88
    VungleReportAdController *_reportingController;	// 144 = 0x90
    VungleReportIncentivizedController *_reportIncentivizedController;	// 152 = 0x98
    VungleInternalMRAIDViewController *_vmraidController;	// 160 = 0xa0
    VungleCustomMRAIDViewController *_customMRAIDController;	// 168 = 0xa8
    unsigned long long _endTaskId;	// 176 = 0xb0
    VungleSDKInitializer *_SDKInitializer;	// 184 = 0xb8
    VungleSleepHandler *_sleepHandler;	// 192 = 0xc0
    VungleLogCoordinator *_logCoordinator;	// 200 = 0xc8
    VunglePlayabilityCoordinator *_playabilityCoordinator;	// 208 = 0xd0
    VunglePlayOptionsProvider *_currentPlayOptions;	// 216 = 0xd8
    VungleVDUIDProvider *_VDUIDProvider;	// 224 = 0xe0
    VungleDeviceInformationProvider *_deviceInformationProvider;	// 232 = 0xe8
    VunglePublisherInformation *_publisherInformation;	// 240 = 0xf0
    id <VungleSDKDelegate> _internalDelegate;	// 248 = 0xf8
    VungleFlexViewPresentationManager *_presentationManager;	// 256 = 0x100
    VungleHTTPLogSender *_vngLogSender;	// 264 = 0x108
    VungleUserSegmentationController *_userSegmentationController;	// 272 = 0x110
    id <VungleSDKHeaderBidding> _headerBiddingDelegate;	// 280 = 0x118
    NSObject<VungleSDKCreativeTracking> *_creativeTrackingDelegate;	// 288 = 0x120
    VungleCacheManager *_cacheManager;	// 296 = 0x128
    NSString *_pluginName;	// 304 = 0x130
}

+ (id)sharedSDK;	// IMP=0x0000000100a8f898
@property(nonatomic) _Bool validCTAURLResolved; // @synthesize validCTAURLResolved=_validCTAURLResolved;
@property(copy, nonatomic) NSString *pluginName; // @synthesize pluginName=_pluginName;
@property(readonly, nonatomic) VungleCacheManager *cacheManager; // @synthesize cacheManager=_cacheManager;
@property __weak NSObject<VungleSDKCreativeTracking> *creativeTrackingDelegate; // @synthesize creativeTrackingDelegate=_creativeTrackingDelegate;
@property(nonatomic) __weak id <VungleSDKHeaderBidding> headerBiddingDelegate; // @synthesize headerBiddingDelegate=_headerBiddingDelegate;
@property(retain, nonatomic) VungleUserSegmentationController *userSegmentationController; // @synthesize userSegmentationController=_userSegmentationController;
@property(nonatomic, getter=isAdDismissInProgress) _Bool adDismissInProgress; // @synthesize adDismissInProgress=_adDismissInProgress;
@property(retain, nonatomic) VungleHTTPLogSender *vngLogSender; // @synthesize vngLogSender=_vngLogSender;
@property(retain, nonatomic) VungleFlexViewPresentationManager *presentationManager; // @synthesize presentationManager=_presentationManager;
@property(retain, nonatomic) id <VungleSDKDelegate> internalDelegate; // @synthesize internalDelegate=_internalDelegate;
@property(retain, nonatomic) VunglePublisherInformation *publisherInformation; // @synthesize publisherInformation=_publisherInformation;
@property(retain, nonatomic) VungleDeviceInformationProvider *deviceInformationProvider; // @synthesize deviceInformationProvider=_deviceInformationProvider;
@property(retain, nonatomic) VungleVDUIDProvider *VDUIDProvider; // @synthesize VDUIDProvider=_VDUIDProvider;
@property(copy, nonatomic) VunglePlayOptionsProvider *currentPlayOptions; // @synthesize currentPlayOptions=_currentPlayOptions;
@property(retain, nonatomic) VunglePlayabilityCoordinator *playabilityCoordinator; // @synthesize playabilityCoordinator=_playabilityCoordinator;
@property(retain, nonatomic) VungleLogCoordinator *logCoordinator; // @synthesize logCoordinator=_logCoordinator;
@property(retain, nonatomic) VungleSleepHandler *sleepHandler; // @synthesize sleepHandler=_sleepHandler;
@property(nonatomic, getter=isSuccessfulAdView) _Bool successfulAdView; // @synthesize successfulAdView=_successfulAdView;
@property(retain, nonatomic) VungleSDKInitializer *SDKInitializer; // @synthesize SDKInitializer=_SDKInitializer;
@property(nonatomic) unsigned long long endTaskId; // @synthesize endTaskId=_endTaskId;
@property(nonatomic, getter=isHeaderBiddingEnabled) _Bool headerBiddingEnabled; // @synthesize headerBiddingEnabled=_headerBiddingEnabled;
@property _Bool didStartup; // @synthesize didStartup=_didStartup;
@property(retain, nonatomic) VungleCustomMRAIDViewController *customMRAIDController; // @synthesize customMRAIDController=_customMRAIDController;
@property(retain, nonatomic) VungleInternalMRAIDViewController *vmraidController; // @synthesize vmraidController=_vmraidController;
@property(retain, nonatomic) VungleReportIncentivizedController *reportIncentivizedController; // @synthesize reportIncentivizedController=_reportIncentivizedController;
@property(retain, nonatomic) VungleReportAdController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) VungleRequestStreamingAdController *requestStreamingAdController; // @synthesize requestStreamingAdController=_requestStreamingAdController;
@property(retain, nonatomic) VungleNewRequestController *createNewRequestController; // @synthesize createNewRequestController=_createNewRequestController;
@property(retain, nonatomic) VungleConfigController *configController; // @synthesize configController=_configController;
@property(retain, nonatomic) VunglePlacementsCoordinator *placementsCoordinator; // @synthesize placementsCoordinator=_placementsCoordinator;
@property(retain, nonatomic) VungleRequestAdController *requestAdController; // @synthesize requestAdController=_requestAdController;
@property(retain, nonatomic) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(retain, nonatomic) VungleAdViewController *currentAdViewController; // @synthesize currentAdViewController=_currentAdViewController;
@property UIViewController *tmpViewController; // @synthesize tmpViewController=_tmpViewController;
@property _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(copy) id playableEventTimer; // @synthesize playableEventTimer=_playableEventTimer;
@property double preventPlayUntilTime; // @synthesize preventPlayUntilTime=_preventPlayUntilTime;
@property _Bool loggingEnabled; // @synthesize loggingEnabled=_loggingEnabled;
@property double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) CADisplayLink *link; // @synthesize link=_link;
@property(nonatomic) unsigned long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(retain, nonatomic) VungleNetworkManager *networkManager; // @synthesize networkManager=_networkManager;
@property(getter=isInitialized) _Bool initialized; // @synthesize initialized=_initialized;
@property _Bool muted; // @synthesize muted=_muted;
@property(retain) NSDictionary *userData; // @synthesize userData=_userData;
- (void).cxx_destruct;	// IMP=0x0000000100a9ab18
- (long long)getCurrentConsentStatus;	// IMP=0x0000000100a9a390
- (void)updateConsentStatus:(long long)arg1;	// IMP=0x0000000100a9a278
- (_Bool)isViewabilityEnabled:(id)arg1;	// IMP=0x0000000100a9a18c
- (void)clearSleep;	// IMP=0x0000000100a9a0fc
- (void)sendRequest:(id)arg1;	// IMP=0x0000000100a9a0e4
- (void)setup;	// IMP=0x0000000100a99d2c
- (void)setPluginName:(id)arg1 version:(id)arg2;	// IMP=0x0000000100a99aa8
- (id)sleepingPlacementErrorWithPlacementID:(id)arg1;	// IMP=0x0000000100a999a4
- (id)unknownPlacementErrorWithPlacementID:(id)arg1;	// IMP=0x0000000100a998a0
- (id)invalidAppIDError;	// IMP=0x0000000100a997a0
- (id)notInitializedError;	// IMP=0x0000000100a99678
- (id)invalidIOSSDKVersionError;	// IMP=0x0000000100a994d4
- (void)detachLogger:(id)arg1;	// IMP=0x0000000100a994bc
- (void)attachLogger:(id)arg1;	// IMP=0x0000000100a994a4
- (id)debugInfo;	// IMP=0x0000000100a99298
- (void)streamingSettingsUpdateShouldStream:(_Bool)arg1 streamingRequestTimeout:(double)arg2 bufferingTimeout:(double)arg3;	// IMP=0x0000000100a99204
- (void)streamingAdControllerShouldPlayAdForPlacement:(id)arg1;	// IMP=0x0000000100a98f60
- (void)streamingAdControllerDidValidateCTA:(_Bool)arg1;	// IMP=0x0000000100a98f54
- (void)streamingAdControllerFailedToLoadStreamingAdForPlacement:(id)arg1 error:(id)arg2;	// IMP=0x0000000100a98f50
- (void)placementCoordinatorDidLoadPlacement:(id)arg1 error:(id)arg2;	// IMP=0x0000000100a98b30
- (void)log:(id)arg1;	// IMP=0x0000000100a98a9c
- (id)cachedPlacement;	// IMP=0x0000000100a989ec
- (void)initialRequestAutoCacheablePlacement;	// IMP=0x0000000100a987f0
- (void)requestAutoCacheablePlacement;	// IMP=0x0000000100a985a4
- (void)updateCachedReportable:(id)arg1;	// IMP=0x0000000100a98568
- (void)willBackgroundAdViewControllerForPlacement:(id)arg1 reportable:(id)arg2;	// IMP=0x0000000100a98558
- (void)didDismissInterstitialAdViewControllerForPlacement:(id)arg1 reportable:(id)arg2;	// IMP=0x0000000100a97d20
- (void)willDismissInterstitialAdViewControllerForPlacement:(id)arg1 reportable:(id)arg2;	// IMP=0x0000000100a97a8c
- (void)didFinishAdViewForPlacement:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x0000000100a979c4
- (void)willPresentInterstitialAdViewControllerForPlacement:(id)arg1 reportable:(id)arg2;	// IMP=0x0000000100a978a8
- (void)didPresentInterstitialAdViewControllerForPlacement:(id)arg1;	// IMP=0x0000000100a977c4
- (void)didGetUserAgent:(id)arg1;	// IMP=0x0000000100a97758
- (void)didGetIDFV:(id)arg1;	// IMP=0x0000000100a976ec
- (void)didGetIFA:(id)arg1;	// IMP=0x0000000100a97680
- (_Bool)loadPlacementWithID:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100a97474
- (_Bool)isAdCachedForPlacementID:(id)arg1;	// IMP=0x0000000100a972a8
- (void)processSuccessfulLoadAdForPlacement:(id)arg1 loadedAd:(id)arg2 presentingController:(id)arg3;	// IMP=0x0000000100a96cac
- (void)processLoadAdErrorResponseForPlacement:(id)arg1 loadedAd:(id)arg2 error:(id)arg3;	// IMP=0x0000000100a96778
- (void)finishedDisplayingAd;	// IMP=0x0000000100a96690
- (_Bool)addAdViewToView:(id)arg1 withOptions:(id)arg2 placementID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100a9509c
- (_Bool)checkContainerViewSize:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100a94e10
- (id)placementWithID:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100a947e0
- (_Bool)canProceedWithAdExperienceWithError:(id *)arg1;	// IMP=0x0000000100a941dc
- (void)adViewabilityChange:(id)arg1;	// IMP=0x0000000100a93e58
- (_Bool)playAd:(id)arg1 options:(id)arg2 placementID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100a934e0
- (_Bool)presentAdForPlacement:(id)arg1 viewController:(id)arg2 playOptions:(id)arg3;	// IMP=0x0000000100a91a5c
- (id)deviceInfo;	// IMP=0x0000000100a9195c
- (void)sendNewRequest;	// IMP=0x0000000100a91918
- (void)setupInitialOperationChain;	// IMP=0x0000000100a9115c
- (void)appWillTerminate;	// IMP=0x0000000100a9110c
- (void)appWillResignActive;	// IMP=0x0000000100a91020
- (void)appWillEnterForeground;	// IMP=0x0000000100a90eb0
- (void)appDidEnterBackground;	// IMP=0x0000000100a90c18
- (void)updateCacheWithSDKVersion:(id)arg1;	// IMP=0x0000000100a90b14
- (void)startWithAppId:(id)arg1 networkManager:(id)arg2;	// IMP=0x0000000100a90730
- (_Bool)startWithAppId:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100a90570
- (_Bool)startWithAppId:(id)arg1 placements:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100a90514
- (id)initWithNetworkManager:(id)arg1 defaults:(id)arg2;	// IMP=0x0000000100a9015c
@property(retain) id <VungleSDKDelegate> delegate;
- (void)setViralUser:(_Bool)arg1;	// IMP=0x0000000100a8fff4
- (_Bool)isViralUser;	// IMP=0x0000000100a8ffa8
- (void)setupEndpointControllersWithNetworkManager:(id)arg1 cacheManager:(id)arg2 defaults:(id)arg3;	// IMP=0x0000000100a8faac
- (void)dealloc;	// IMP=0x0000000100a8fa04
- (id)getValidPlacementInfo;	// IMP=0x0000000100a8f52c
- (void)clearAdUnitCreativesForPlacement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100a8f29c
- (void)setHTTPHeaderPair:(id)arg1;	// IMP=0x0000000100a8f230

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

